{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/TruthMachine/hello-world-part-four-tutorial/starter-files/src/HelloWorld.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { helloWorldContract, connectWallet, submitTruth, viewTruth, getCurrentWalletConnected } from \"./util/interact.js\";\nimport alchemylogo from \"./alchemylogo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HelloWorld = () => {\n  _s();\n\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\"); //const [truth, setTruth] = useState(\"No connection to the network.\"); //default message\n\n  const [newTruthTitle, setNewTruthTitle] = useState(\"\");\n  const [newTruthURL, setNewTruthUrl] = useState(\"\"); //called only once\n\n  useEffect(async () => {\n    const newTruthTitle = \"Submit Truth\";\n    setNewTruthTitle(newTruthTitle);\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener();\n  }, []);\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"üëÜüèΩ Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"ü¶ä Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onUpdatePressed = async () => {\n    const {\n      status\n    } = await submitTruth(walletAddress, newTruthTitle, newTruthURL);\n    setStatus(status);\n  }; //the UI of our component\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"logo\",\n      src: alchemylogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"walletButton\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        paddingTop: \"50px\"\n      },\n      children: \"Current Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: newTruthTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        paddingTop: \"18px\"\n      },\n      children: \"New Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Submit A New Truth Title\",\n        onChange: e => setNewTruthTitle(e.target.value),\n        value: newTruthTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Submit A New Truth URL\",\n        onChange: e => setNewTruthUrl(e.target.value),\n        value: newTruthURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"publish\",\n        onClick: onUpdatePressed,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HelloWorld, \"8VRzXGq1r62HFKQtAxT1otdpSd0=\");\n\n_c = HelloWorld;\nexport default HelloWorld;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelloWorld\");","map":{"version":3,"names":["React","useEffect","useState","helloWorldContract","connectWallet","submitTruth","viewTruth","getCurrentWalletConnected","HelloWorld","walletAddress","setWallet","status","setStatus","newTruthTitle","setNewTruthTitle","newTruthURL","setNewTruthUrl","address","addWalletListener","window","ethereum","on","accounts","length","connectWalletPressed","walletResponse","onUpdatePressed","alchemylogo","String","substring","paddingTop","e","target","value"],"sources":["/home/user/Desktop/TruthMachine/hello-world-part-four-tutorial/starter-files/src/HelloWorld.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  helloWorldContract,\n  connectWallet,\n  submitTruth,\n  viewTruth,\n  getCurrentWalletConnected,\n} from \"./util/interact.js\";\n\nimport alchemylogo from \"./alchemylogo.svg\";\n\nconst HelloWorld = () => {\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  //const [truth, setTruth] = useState(\"No connection to the network.\"); //default message\n  const [newTruthTitle, setNewTruthTitle] = useState(\"\");\n  const [newTruthURL, setNewTruthUrl] = useState(\"\");\n\n  //called only once\n  useEffect(async () => {\n    const newTruthTitle = \"Submit Truth\";\n    setNewTruthTitle(newTruthTitle);\n\n    const { address, status } = await getCurrentWalletConnected();\n\n    setWallet(address);\n    setStatus(status);\n\n    addWalletListener();\n  }, []);\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"üëÜüèΩ Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"ü¶ä Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(\n        <p>\n          {\" \"}\n          ü¶ä{\" \"}\n          <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n            You must install Metamask, a virtual Ethereum wallet, in your\n            browser.\n          </a>\n        </p>\n      );\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onUpdatePressed = async () => {\n    const { status } = await submitTruth(walletAddress, newTruthTitle, newTruthURL);\n    setStatus(status);\n  };\n\n  //the UI of our component\n  return (\n    <div id=\"container\">\n      <img id=\"logo\" src={alchemylogo}></img>\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}\n      </button>\n\n      <h2 style={{ paddingTop: \"50px\" }}>Current Message:</h2>\n      <p>{newTruthTitle}</p>\n\n      <h2 style={{ paddingTop: \"18px\" }}>New Message:</h2>\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Submit A New Truth Title\"\n          onChange={(e) => setNewTruthTitle(e.target.value)}\n          value={newTruthTitle}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Submit A New Truth URL\"\n          onChange={(e) => setNewTruthUrl(e.target.value)}\n          value={newTruthURL}\n        />\n        <p id=\"status\">{status}</p>\n\n        <button id=\"publish\" onClick={onUpdatePressed}>\n          Update\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HelloWorld;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}