{"ast":null,"code":"/*!\n * URI.js - Mutating URLs\n *\n * Version: 1.19.11\n *\n * Author: Rodney Rehm\n * Web: http://medialize.github.io/URI.js/\n *\n * Licensed under\n *   MIT License http://www.opensource.org/licenses/mit-license\n *\n */\n(function (root, factory) {\n  'use strict'; // https://github.com/umdjs/umd/blob/master/returnExports.js\n\n  if (typeof module === 'object' && module.exports) {\n    // Node\n    module.exports = factory(require('./punycode'), require('./IPv6'), require('./SecondLevelDomains'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['./punycode', './IPv6', './SecondLevelDomains'], factory);\n  } else {\n    // Browser globals (root is window)\n    root.URI = factory(root.punycode, root.IPv6, root.SecondLevelDomains, root);\n  }\n})(this, function (punycode, IPv6, SLD, root) {\n  'use strict';\n  /*global location, escape, unescape */\n  // FIXME: v2.0.0 renamce non-camelCase properties to uppercase\n\n  /*jshint camelcase: false */\n  // save current URI variable, if any\n\n  var _URI = root && root.URI;\n\n  function URI(url, base) {\n    var _urlSupplied = arguments.length >= 1;\n\n    var _baseSupplied = arguments.length >= 2; // Allow instantiation without the 'new' keyword\n\n\n    if (!(this instanceof URI)) {\n      if (_urlSupplied) {\n        if (_baseSupplied) {\n          return new URI(url, base);\n        }\n\n        return new URI(url);\n      }\n\n      return new URI();\n    }\n\n    if (url === undefined) {\n      if (_urlSupplied) {\n        throw new TypeError('undefined is not a valid argument for URI');\n      }\n\n      if (typeof location !== 'undefined') {\n        url = location.href + '';\n      } else {\n        url = '';\n      }\n    }\n\n    if (url === null) {\n      if (_urlSupplied) {\n        throw new TypeError('null is not a valid argument for URI');\n      }\n    }\n\n    this.href(url); // resolve to base according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#constructor\n\n    if (base !== undefined) {\n      return this.absoluteTo(base);\n    }\n\n    return this;\n  }\n\n  function isInteger(value) {\n    return /^[0-9]+$/.test(value);\n  }\n\n  URI.version = '1.19.11';\n  var p = URI.prototype;\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  function escapeRegEx(string) {\n    // https://github.com/medialize/URI.js/commit/85ac21783c11f8ccab06106dba9735a31a86924d#commitcomment-821963\n    return string.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  function getType(value) {\n    // IE8 doesn't return [Object Undefined] but [Object Object] for undefined value\n    if (value === undefined) {\n      return 'Undefined';\n    }\n\n    return String(Object.prototype.toString.call(value)).slice(8, -1);\n  }\n\n  function isArray(obj) {\n    return getType(obj) === 'Array';\n  }\n\n  function filterArrayValues(data, value) {\n    var lookup = {};\n    var i, length;\n\n    if (getType(value) === 'RegExp') {\n      lookup = null;\n    } else if (isArray(value)) {\n      for (i = 0, length = value.length; i < length; i++) {\n        lookup[value[i]] = true;\n      }\n    } else {\n      lookup[value] = true;\n    }\n\n    for (i = 0, length = data.length; i < length; i++) {\n      /*jshint laxbreak: true */\n      var _match = lookup && lookup[data[i]] !== undefined || !lookup && value.test(data[i]);\n      /*jshint laxbreak: false */\n\n\n      if (_match) {\n        data.splice(i, 1);\n        length--;\n        i--;\n      }\n    }\n\n    return data;\n  }\n\n  function arrayContains(list, value) {\n    var i, length; // value may be string, number, array, regexp\n\n    if (isArray(value)) {\n      // Note: this can be optimized to O(n) (instead of current O(m * n))\n      for (i = 0, length = value.length; i < length; i++) {\n        if (!arrayContains(list, value[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    var _type = getType(value);\n\n    for (i = 0, length = list.length; i < length; i++) {\n      if (_type === 'RegExp') {\n        if (typeof list[i] === 'string' && list[i].match(value)) {\n          return true;\n        }\n      } else if (list[i] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function arraysEqual(one, two) {\n    if (!isArray(one) || !isArray(two)) {\n      return false;\n    } // arrays can't be equal if they have different amount of content\n\n\n    if (one.length !== two.length) {\n      return false;\n    }\n\n    one.sort();\n    two.sort();\n\n    for (var i = 0, l = one.length; i < l; i++) {\n      if (one[i] !== two[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function trimSlashes(text) {\n    var trim_expression = /^\\/+|\\/+$/g;\n    return text.replace(trim_expression, '');\n  }\n\n  URI._parts = function () {\n    return {\n      protocol: null,\n      username: null,\n      password: null,\n      hostname: null,\n      urn: null,\n      port: null,\n      path: null,\n      query: null,\n      fragment: null,\n      // state\n      preventInvalidHostname: URI.preventInvalidHostname,\n      duplicateQueryParameters: URI.duplicateQueryParameters,\n      escapeQuerySpace: URI.escapeQuerySpace\n    };\n  }; // state: throw on invalid hostname\n  // see https://github.com/medialize/URI.js/pull/345\n  // and https://github.com/medialize/URI.js/issues/354\n\n\n  URI.preventInvalidHostname = false; // state: allow duplicate query parameters (a=1&a=1)\n\n  URI.duplicateQueryParameters = false; // state: replaces + with %20 (space in query strings)\n\n  URI.escapeQuerySpace = true; // static properties\n\n  URI.protocol_expression = /^[a-z][a-z0-9.+-]*$/i;\n  URI.idn_expression = /[^a-z0-9\\._-]/i;\n  URI.punycode_expression = /(xn--)/i; // well, 333.444.555.666 matches, but it sure ain't no IPv4 - do we care?\n\n  URI.ip4_expression = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/; // credits to Rich Brown\n  // source: http://forums.intermapper.com/viewtopic.php?p=1096#1096\n  // specification: http://www.ietf.org/rfc/rfc4291.txt\n\n  URI.ip6_expression = /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/; // expression used is \"gruber revised\" (@gruber v2) determined to be the\n  // best solution in a regex-golf we did a couple of ages ago at\n  // * http://mathiasbynens.be/demo/url-regex\n  // * http://rodneyrehm.de/t/url-regex.html\n\n  URI.find_uri_expression = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/ig;\n  URI.findUri = {\n    // valid \"scheme://\" or \"www.\"\n    start: /\\b(?:([a-z][a-z0-9.+-]*:\\/\\/)|www\\.)/gi,\n    // everything up to the next whitespace\n    end: /[\\s\\r\\n]|$/,\n    // trim trailing punctuation captured by end RegExp\n    trim: /[`!()\\[\\]{};:'\".,<>?«»“”„‘’]+$/,\n    // balanced parens inclusion (), [], {}, <>\n    parens: /(\\([^\\)]*\\)|\\[[^\\]]*\\]|\\{[^}]*\\}|<[^>]*>)/g\n  };\n  URI.leading_whitespace_expression = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/; // https://infra.spec.whatwg.org/#ascii-tab-or-newline\n\n  URI.ascii_tab_whitespace = /[\\u0009\\u000A\\u000D]+/g; // http://www.iana.org/assignments/uri-schemes.html\n  // http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Well-known_ports\n\n  URI.defaultPorts = {\n    http: '80',\n    https: '443',\n    ftp: '21',\n    gopher: '70',\n    ws: '80',\n    wss: '443'\n  }; // list of protocols which always require a hostname\n\n  URI.hostProtocols = ['http', 'https']; // allowed hostname characters according to RFC 3986\n  // ALPHA DIGIT \"-\" \".\" \"_\" \"~\" \"!\" \"$\" \"&\" \"'\" \"(\" \")\" \"*\" \"+\" \",\" \";\" \"=\" %encoded\n  // I've never seen a (non-IDN) hostname other than: ALPHA DIGIT . - _\n\n  URI.invalid_hostname_characters = /[^a-zA-Z0-9\\.\\-:_]/; // map DOM Elements to their URI attribute\n\n  URI.domAttributes = {\n    'a': 'href',\n    'blockquote': 'cite',\n    'link': 'href',\n    'base': 'href',\n    'script': 'src',\n    'form': 'action',\n    'img': 'src',\n    'area': 'href',\n    'iframe': 'src',\n    'embed': 'src',\n    'source': 'src',\n    'track': 'src',\n    'input': 'src',\n    // but only if type=\"image\"\n    'audio': 'src',\n    'video': 'src'\n  };\n\n  URI.getDomAttribute = function (node) {\n    if (!node || !node.nodeName) {\n      return undefined;\n    }\n\n    var nodeName = node.nodeName.toLowerCase(); // <input> should only expose src for type=\"image\"\n\n    if (nodeName === 'input' && node.type !== 'image') {\n      return undefined;\n    }\n\n    return URI.domAttributes[nodeName];\n  };\n\n  function escapeForDumbFirefox36(value) {\n    // https://github.com/medialize/URI.js/issues/91\n    return escape(value);\n  } // encoding / decoding according to RFC3986\n\n\n  function strictEncodeURIComponent(string) {\n    // see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURIComponent\n    return encodeURIComponent(string).replace(/[!'()*]/g, escapeForDumbFirefox36).replace(/\\*/g, '%2A');\n  }\n\n  URI.encode = strictEncodeURIComponent;\n  URI.decode = decodeURIComponent;\n\n  URI.iso8859 = function () {\n    URI.encode = escape;\n    URI.decode = unescape;\n  };\n\n  URI.unicode = function () {\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = decodeURIComponent;\n  };\n\n  URI.characters = {\n    pathname: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig,\n        map: {\n          // -._~!'()*\n          '%24': '$',\n          '%26': '&',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%3A': ':',\n          '%40': '@'\n        }\n      },\n      decode: {\n        expression: /[\\/\\?#]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23'\n        }\n      }\n    },\n    reserved: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,\n        map: {\n          // gen-delims\n          '%3A': ':',\n          '%2F': '/',\n          '%3F': '?',\n          '%23': '#',\n          '%5B': '[',\n          '%5D': ']',\n          '%40': '@',\n          // sub-delims\n          '%21': '!',\n          '%24': '$',\n          '%26': '&',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '='\n        }\n      }\n    },\n    urnpath: {\n      // The characters under `encode` are the characters called out by RFC 2141 as being acceptable\n      // for usage in a URN. RFC2141 also calls out \"-\", \".\", and \"_\" as acceptable characters, but\n      // these aren't encoded by encodeURIComponent, so we don't have to call them out here. Also\n      // note that the colon character is not featured in the encoding map; this is because URI.js\n      // gives the colons in URNs semantic meaning as the delimiters of path segements, and so it\n      // should not appear unencoded in a segment itself.\n      // See also the note above about RFC3986 and capitalalized hex digits.\n      encode: {\n        expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig,\n        map: {\n          '%21': '!',\n          '%24': '$',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%40': '@'\n        }\n      },\n      // These characters are the characters called out by RFC2141 as \"reserved\" characters that\n      // should never appear in a URN, plus the colon character (see note above).\n      decode: {\n        expression: /[\\/\\?#:]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23',\n          ':': '%3A'\n        }\n      }\n    }\n  };\n\n  URI.encodeQuery = function (string, escapeQuerySpace) {\n    var escaped = URI.encode(string + '');\n\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    return escapeQuerySpace ? escaped.replace(/%20/g, '+') : escaped;\n  };\n\n  URI.decodeQuery = function (string, escapeQuerySpace) {\n    string += '';\n\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    try {\n      return URI.decode(escapeQuerySpace ? string.replace(/\\+/g, '%20') : string);\n    } catch (e) {\n      // we're not going to mess with weird encodings,\n      // give up and return the undecoded original string\n      // see https://github.com/medialize/URI.js/issues/87\n      // see https://github.com/medialize/URI.js/issues/92\n      return string;\n    }\n  }; // generate encode/decode path functions\n\n\n  var _parts = {\n    'encode': 'encode',\n    'decode': 'decode'\n  };\n\n  var _part;\n\n  var generateAccessor = function (_group, _part) {\n    return function (string) {\n      try {\n        return URI[_part](string + '').replace(URI.characters[_group][_part].expression, function (c) {\n          return URI.characters[_group][_part].map[c];\n        });\n      } catch (e) {\n        // we're not going to mess with weird encodings,\n        // give up and return the undecoded original string\n        // see https://github.com/medialize/URI.js/issues/87\n        // see https://github.com/medialize/URI.js/issues/92\n        return string;\n      }\n    };\n  };\n\n  for (_part in _parts) {\n    URI[_part + 'PathSegment'] = generateAccessor('pathname', _parts[_part]);\n    URI[_part + 'UrnPathSegment'] = generateAccessor('urnpath', _parts[_part]);\n  }\n\n  var generateSegmentedPathFunction = function (_sep, _codingFuncName, _innerCodingFuncName) {\n    return function (string) {\n      // Why pass in names of functions, rather than the function objects themselves? The\n      // definitions of some functions (but in particular, URI.decode) will occasionally change due\n      // to URI.js having ISO8859 and Unicode modes. Passing in the name and getting it will ensure\n      // that the functions we use here are \"fresh\".\n      var actualCodingFunc;\n\n      if (!_innerCodingFuncName) {\n        actualCodingFunc = URI[_codingFuncName];\n      } else {\n        actualCodingFunc = function (string) {\n          return URI[_codingFuncName](URI[_innerCodingFuncName](string));\n        };\n      }\n\n      var segments = (string + '').split(_sep);\n\n      for (var i = 0, length = segments.length; i < length; i++) {\n        segments[i] = actualCodingFunc(segments[i]);\n      }\n\n      return segments.join(_sep);\n    };\n  }; // This takes place outside the above loop because we don't want, e.g., encodeUrnPath functions.\n\n\n  URI.decodePath = generateSegmentedPathFunction('/', 'decodePathSegment');\n  URI.decodeUrnPath = generateSegmentedPathFunction(':', 'decodeUrnPathSegment');\n  URI.recodePath = generateSegmentedPathFunction('/', 'encodePathSegment', 'decode');\n  URI.recodeUrnPath = generateSegmentedPathFunction(':', 'encodeUrnPathSegment', 'decode');\n  URI.encodeReserved = generateAccessor('reserved', 'encode');\n\n  URI.parse = function (string, parts) {\n    var pos;\n\n    if (!parts) {\n      parts = {\n        preventInvalidHostname: URI.preventInvalidHostname\n      };\n    }\n\n    string = string.replace(URI.leading_whitespace_expression, ''); // https://infra.spec.whatwg.org/#ascii-tab-or-newline\n\n    string = string.replace(URI.ascii_tab_whitespace, ''); // [protocol\"://\"[username[\":\"password]\"@\"]hostname[\":\"port]\"/\"?][path][\"?\"querystring][\"#\"fragment]\n    // extract fragment\n\n    pos = string.indexOf('#');\n\n    if (pos > -1) {\n      // escaping?\n      parts.fragment = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    } // extract query\n\n\n    pos = string.indexOf('?');\n\n    if (pos > -1) {\n      // escaping?\n      parts.query = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    } // slashes and backslashes have lost all meaning for the web protocols (https, http, wss, ws)\n\n\n    string = string.replace(/^(https?|ftp|wss?)?:+[/\\\\]*/i, '$1://'); // slashes and backslashes have lost all meaning for scheme relative URLs\n\n    string = string.replace(/^[/\\\\]{2,}/i, '//'); // extract protocol\n\n    if (string.substring(0, 2) === '//') {\n      // relative-scheme\n      parts.protocol = null;\n      string = string.substring(2); // extract \"user:pass@host:port\"\n\n      string = URI.parseAuthority(string, parts);\n    } else {\n      pos = string.indexOf(':');\n\n      if (pos > -1) {\n        parts.protocol = string.substring(0, pos) || null;\n\n        if (parts.protocol && !parts.protocol.match(URI.protocol_expression)) {\n          // : may be within the path\n          parts.protocol = undefined;\n        } else if (string.substring(pos + 1, pos + 3).replace(/\\\\/g, '/') === '//') {\n          string = string.substring(pos + 3); // extract \"user:pass@host:port\"\n\n          string = URI.parseAuthority(string, parts);\n        } else {\n          string = string.substring(pos + 1);\n          parts.urn = true;\n        }\n      }\n    } // what's left must be the path\n\n\n    parts.path = string; // and we're done\n\n    return parts;\n  };\n\n  URI.parseHost = function (string, parts) {\n    if (!string) {\n      string = '';\n    } // Copy chrome, IE, opera backslash-handling behavior.\n    // Back slashes before the query string get converted to forward slashes\n    // See: https://github.com/joyent/node/blob/386fd24f49b0e9d1a8a076592a404168faeecc34/lib/url.js#L115-L124\n    // See: https://code.google.com/p/chromium/issues/detail?id=25916\n    // https://github.com/medialize/URI.js/pull/233\n\n\n    string = string.replace(/\\\\/g, '/'); // extract host:port\n\n    var pos = string.indexOf('/');\n    var bracketPos;\n    var t;\n\n    if (pos === -1) {\n      pos = string.length;\n    }\n\n    if (string.charAt(0) === '[') {\n      // IPv6 host - http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04#section-6\n      // I claim most client software breaks on IPv6 anyways. To simplify things, URI only accepts\n      // IPv6+port in the format [2001:db8::1]:80 (for the time being)\n      bracketPos = string.indexOf(']');\n      parts.hostname = string.substring(1, bracketPos) || null;\n      parts.port = string.substring(bracketPos + 2, pos) || null;\n\n      if (parts.port === '/') {\n        parts.port = null;\n      }\n    } else {\n      var firstColon = string.indexOf(':');\n      var firstSlash = string.indexOf('/');\n      var nextColon = string.indexOf(':', firstColon + 1);\n\n      if (nextColon !== -1 && (firstSlash === -1 || nextColon < firstSlash)) {\n        // IPv6 host contains multiple colons - but no port\n        // this notation is actually not allowed by RFC 3986, but we're a liberal parser\n        parts.hostname = string.substring(0, pos) || null;\n        parts.port = null;\n      } else {\n        t = string.substring(0, pos).split(':');\n        parts.hostname = t[0] || null;\n        parts.port = t[1] || null;\n      }\n    }\n\n    if (parts.hostname && string.substring(pos).charAt(0) !== '/') {\n      pos++;\n      string = '/' + string;\n    }\n\n    if (parts.preventInvalidHostname) {\n      URI.ensureValidHostname(parts.hostname, parts.protocol);\n    }\n\n    if (parts.port) {\n      URI.ensureValidPort(parts.port);\n    }\n\n    return string.substring(pos) || '/';\n  };\n\n  URI.parseAuthority = function (string, parts) {\n    string = URI.parseUserinfo(string, parts);\n    return URI.parseHost(string, parts);\n  };\n\n  URI.parseUserinfo = function (string, parts) {\n    // extract username:password\n    var _string = string;\n    var firstBackSlash = string.indexOf('\\\\');\n\n    if (firstBackSlash !== -1) {\n      string = string.replace(/\\\\/g, '/');\n    }\n\n    var firstSlash = string.indexOf('/');\n    var pos = string.lastIndexOf('@', firstSlash > -1 ? firstSlash : string.length - 1);\n    var t; // authority@ must come before /path or \\path\n\n    if (pos > -1 && (firstSlash === -1 || pos < firstSlash)) {\n      t = string.substring(0, pos).split(':');\n      parts.username = t[0] ? URI.decode(t[0]) : null;\n      t.shift();\n      parts.password = t[0] ? URI.decode(t.join(':')) : null;\n      string = _string.substring(pos + 1);\n    } else {\n      parts.username = null;\n      parts.password = null;\n    }\n\n    return string;\n  };\n\n  URI.parseQuery = function (string, escapeQuerySpace) {\n    if (!string) {\n      return {};\n    } // throw out the funky business - \"?\"[name\"=\"value\"&\"]+\n\n\n    string = string.replace(/&+/g, '&').replace(/^\\?*&*|&+$/g, '');\n\n    if (!string) {\n      return {};\n    }\n\n    var items = {};\n    var splits = string.split('&');\n    var length = splits.length;\n    var v, name, value;\n\n    for (var i = 0; i < length; i++) {\n      v = splits[i].split('=');\n      name = URI.decodeQuery(v.shift(), escapeQuerySpace); // no \"=\" is null according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters\n\n      value = v.length ? URI.decodeQuery(v.join('='), escapeQuerySpace) : null;\n\n      if (name === '__proto__') {\n        // ignore attempt at exploiting JavaScript internals\n        continue;\n      } else if (hasOwn.call(items, name)) {\n        if (typeof items[name] === 'string' || items[name] === null) {\n          items[name] = [items[name]];\n        }\n\n        items[name].push(value);\n      } else {\n        items[name] = value;\n      }\n    }\n\n    return items;\n  };\n\n  URI.build = function (parts) {\n    var t = '';\n    var requireAbsolutePath = false;\n\n    if (parts.protocol) {\n      t += parts.protocol + ':';\n    }\n\n    if (!parts.urn && (t || parts.hostname)) {\n      t += '//';\n      requireAbsolutePath = true;\n    }\n\n    t += URI.buildAuthority(parts) || '';\n\n    if (typeof parts.path === 'string') {\n      if (parts.path.charAt(0) !== '/' && requireAbsolutePath) {\n        t += '/';\n      }\n\n      t += parts.path;\n    }\n\n    if (typeof parts.query === 'string' && parts.query) {\n      t += '?' + parts.query;\n    }\n\n    if (typeof parts.fragment === 'string' && parts.fragment) {\n      t += '#' + parts.fragment;\n    }\n\n    return t;\n  };\n\n  URI.buildHost = function (parts) {\n    var t = '';\n\n    if (!parts.hostname) {\n      return '';\n    } else if (URI.ip6_expression.test(parts.hostname)) {\n      t += '[' + parts.hostname + ']';\n    } else {\n      t += parts.hostname;\n    }\n\n    if (parts.port) {\n      t += ':' + parts.port;\n    }\n\n    return t;\n  };\n\n  URI.buildAuthority = function (parts) {\n    return URI.buildUserinfo(parts) + URI.buildHost(parts);\n  };\n\n  URI.buildUserinfo = function (parts) {\n    var t = '';\n\n    if (parts.username) {\n      t += URI.encode(parts.username);\n    }\n\n    if (parts.password) {\n      t += ':' + URI.encode(parts.password);\n    }\n\n    if (t) {\n      t += '@';\n    }\n\n    return t;\n  };\n\n  URI.buildQuery = function (data, duplicateQueryParameters, escapeQuerySpace) {\n    // according to http://tools.ietf.org/html/rfc3986 or http://labs.apache.org/webarch/uri/rfc/rfc3986.html\n    // being »-._~!$&'()*+,;=:@/?« %HEX and alnum are allowed\n    // the RFC explicitly states ?/foo being a valid use case, no mention of parameter syntax!\n    // URI.js treats the query string as being application/x-www-form-urlencoded\n    // see http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type\n    var t = '';\n    var unique, key, i, length;\n\n    for (key in data) {\n      if (key === '__proto__') {\n        // ignore attempt at exploiting JavaScript internals\n        continue;\n      } else if (hasOwn.call(data, key)) {\n        if (isArray(data[key])) {\n          unique = {};\n\n          for (i = 0, length = data[key].length; i < length; i++) {\n            if (data[key][i] !== undefined && unique[data[key][i] + ''] === undefined) {\n              t += '&' + URI.buildQueryParameter(key, data[key][i], escapeQuerySpace);\n\n              if (duplicateQueryParameters !== true) {\n                unique[data[key][i] + ''] = true;\n              }\n            }\n          }\n        } else if (data[key] !== undefined) {\n          t += '&' + URI.buildQueryParameter(key, data[key], escapeQuerySpace);\n        }\n      }\n    }\n\n    return t.substring(1);\n  };\n\n  URI.buildQueryParameter = function (name, value, escapeQuerySpace) {\n    // http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type -- application/x-www-form-urlencoded\n    // don't append \"=\" for null values, according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#url-parameter-serialization\n    return URI.encodeQuery(name, escapeQuerySpace) + (value !== null ? '=' + URI.encodeQuery(value, escapeQuerySpace) : '');\n  };\n\n  URI.addQuery = function (data, name, value) {\n    if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.addQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (data[name] === undefined) {\n        data[name] = value;\n        return;\n      } else if (typeof data[name] === 'string') {\n        data[name] = [data[name]];\n      }\n\n      if (!isArray(value)) {\n        value = [value];\n      }\n\n      data[name] = (data[name] || []).concat(value);\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n  };\n\n  URI.setQuery = function (data, name, value) {\n    if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.setQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      data[name] = value === undefined ? null : value;\n    } else {\n      throw new TypeError('URI.setQuery() accepts an object, string as the name parameter');\n    }\n  };\n\n  URI.removeQuery = function (data, name, value) {\n    var i, length, key;\n\n    if (isArray(name)) {\n      for (i = 0, length = name.length; i < length; i++) {\n        data[name[i]] = undefined;\n      }\n    } else if (getType(name) === 'RegExp') {\n      for (key in data) {\n        if (name.test(key)) {\n          data[key] = undefined;\n        }\n      }\n    } else if (typeof name === 'object') {\n      for (key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.removeQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (value !== undefined) {\n        if (getType(value) === 'RegExp') {\n          if (!isArray(data[name]) && value.test(data[name])) {\n            data[name] = undefined;\n          } else {\n            data[name] = filterArrayValues(data[name], value);\n          }\n        } else if (data[name] === String(value) && (!isArray(value) || value.length === 1)) {\n          data[name] = undefined;\n        } else if (isArray(data[name])) {\n          data[name] = filterArrayValues(data[name], value);\n        }\n      } else {\n        data[name] = undefined;\n      }\n    } else {\n      throw new TypeError('URI.removeQuery() accepts an object, string, RegExp as the first parameter');\n    }\n  };\n\n  URI.hasQuery = function (data, name, value, withinArray) {\n    switch (getType(name)) {\n      case 'String':\n        // Nothing to do here\n        break;\n\n      case 'RegExp':\n        for (var key in data) {\n          if (hasOwn.call(data, key)) {\n            if (name.test(key) && (value === undefined || URI.hasQuery(data, key, value))) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n\n      case 'Object':\n        for (var _key in name) {\n          if (hasOwn.call(name, _key)) {\n            if (!URI.hasQuery(data, _key, name[_key])) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts a string, regular expression or object as the name parameter');\n    }\n\n    switch (getType(value)) {\n      case 'Undefined':\n        // true if exists (but may be empty)\n        return name in data;\n      // data[name] !== undefined;\n\n      case 'Boolean':\n        // true if exists and non-empty\n        var _booly = Boolean(isArray(data[name]) ? data[name].length : data[name]);\n\n        return value === _booly;\n\n      case 'Function':\n        // allow complex comparison\n        return !!value(data[name], name, data);\n\n      case 'Array':\n        if (!isArray(data[name])) {\n          return false;\n        }\n\n        var op = withinArray ? arrayContains : arraysEqual;\n        return op(data[name], value);\n\n      case 'RegExp':\n        if (!isArray(data[name])) {\n          return Boolean(data[name] && data[name].match(value));\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      case 'Number':\n        value = String(value);\n\n      /* falls through */\n\n      case 'String':\n        if (!isArray(data[name])) {\n          return data[name] === value;\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter');\n    }\n  };\n\n  URI.joinPaths = function () {\n    var input = [];\n    var segments = [];\n    var nonEmptySegments = 0;\n\n    for (var i = 0; i < arguments.length; i++) {\n      var url = new URI(arguments[i]);\n      input.push(url);\n\n      var _segments = url.segment();\n\n      for (var s = 0; s < _segments.length; s++) {\n        if (typeof _segments[s] === 'string') {\n          segments.push(_segments[s]);\n        }\n\n        if (_segments[s]) {\n          nonEmptySegments++;\n        }\n      }\n    }\n\n    if (!segments.length || !nonEmptySegments) {\n      return new URI('');\n    }\n\n    var uri = new URI('').segment(segments);\n\n    if (input[0].path() === '' || input[0].path().slice(0, 1) === '/') {\n      uri.path('/' + uri.path());\n    }\n\n    return uri.normalize();\n  };\n\n  URI.commonPath = function (one, two) {\n    var length = Math.min(one.length, two.length);\n    var pos; // find first non-matching character\n\n    for (pos = 0; pos < length; pos++) {\n      if (one.charAt(pos) !== two.charAt(pos)) {\n        pos--;\n        break;\n      }\n    }\n\n    if (pos < 1) {\n      return one.charAt(0) === two.charAt(0) && one.charAt(0) === '/' ? '/' : '';\n    } // revert to last /\n\n\n    if (one.charAt(pos) !== '/' || two.charAt(pos) !== '/') {\n      pos = one.substring(0, pos).lastIndexOf('/');\n    }\n\n    return one.substring(0, pos + 1);\n  };\n\n  URI.withinString = function (string, callback, options) {\n    options || (options = {});\n\n    var _start = options.start || URI.findUri.start;\n\n    var _end = options.end || URI.findUri.end;\n\n    var _trim = options.trim || URI.findUri.trim;\n\n    var _parens = options.parens || URI.findUri.parens;\n\n    var _attributeOpen = /[a-z0-9-]=[\"']?$/i;\n    _start.lastIndex = 0;\n\n    while (true) {\n      var match = _start.exec(string);\n\n      if (!match) {\n        break;\n      }\n\n      var start = match.index;\n\n      if (options.ignoreHtml) {\n        // attribut(e=[\"']?$)\n        var attributeOpen = string.slice(Math.max(start - 3, 0), start);\n\n        if (attributeOpen && _attributeOpen.test(attributeOpen)) {\n          continue;\n        }\n      }\n\n      var end = start + string.slice(start).search(_end);\n      var slice = string.slice(start, end); // make sure we include well balanced parens\n\n      var parensEnd = -1;\n\n      while (true) {\n        var parensMatch = _parens.exec(slice);\n\n        if (!parensMatch) {\n          break;\n        }\n\n        var parensMatchEnd = parensMatch.index + parensMatch[0].length;\n        parensEnd = Math.max(parensEnd, parensMatchEnd);\n      }\n\n      if (parensEnd > -1) {\n        slice = slice.slice(0, parensEnd) + slice.slice(parensEnd).replace(_trim, '');\n      } else {\n        slice = slice.replace(_trim, '');\n      }\n\n      if (slice.length <= match[0].length) {\n        // the extract only contains the starting marker of a URI,\n        // e.g. \"www\" or \"http://\"\n        continue;\n      }\n\n      if (options.ignore && options.ignore.test(slice)) {\n        continue;\n      }\n\n      end = start + slice.length;\n      var result = callback(slice, start, end, string);\n\n      if (result === undefined) {\n        _start.lastIndex = end;\n        continue;\n      }\n\n      result = String(result);\n      string = string.slice(0, start) + result + string.slice(end);\n      _start.lastIndex = start + result.length;\n    }\n\n    _start.lastIndex = 0;\n    return string;\n  };\n\n  URI.ensureValidHostname = function (v, protocol) {\n    // Theoretically URIs allow percent-encoding in Hostnames (according to RFC 3986)\n    // they are not part of DNS and therefore ignored by URI.js\n    var hasHostname = !!v; // not null and not an empty string\n\n    var hasProtocol = !!protocol;\n    var rejectEmptyHostname = false;\n\n    if (hasProtocol) {\n      rejectEmptyHostname = arrayContains(URI.hostProtocols, protocol);\n    }\n\n    if (rejectEmptyHostname && !hasHostname) {\n      throw new TypeError('Hostname cannot be empty, if protocol is ' + protocol);\n    } else if (v && v.match(URI.invalid_hostname_characters)) {\n      // test punycode\n      if (!punycode) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');\n      }\n\n      if (punycode.toASCII(v).match(URI.invalid_hostname_characters)) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-:_]');\n      }\n    }\n  };\n\n  URI.ensureValidPort = function (v) {\n    if (!v) {\n      return;\n    }\n\n    var port = Number(v);\n\n    if (isInteger(port) && port > 0 && port < 65536) {\n      return;\n    }\n\n    throw new TypeError('Port \"' + v + '\" is not a valid port');\n  }; // noConflict\n\n\n  URI.noConflict = function (removeAll) {\n    if (removeAll) {\n      var unconflicted = {\n        URI: this.noConflict()\n      };\n\n      if (root.URITemplate && typeof root.URITemplate.noConflict === 'function') {\n        unconflicted.URITemplate = root.URITemplate.noConflict();\n      }\n\n      if (root.IPv6 && typeof root.IPv6.noConflict === 'function') {\n        unconflicted.IPv6 = root.IPv6.noConflict();\n      }\n\n      if (root.SecondLevelDomains && typeof root.SecondLevelDomains.noConflict === 'function') {\n        unconflicted.SecondLevelDomains = root.SecondLevelDomains.noConflict();\n      }\n\n      return unconflicted;\n    } else if (root.URI === this) {\n      root.URI = _URI;\n    }\n\n    return this;\n  };\n\n  p.build = function (deferBuild) {\n    if (deferBuild === true) {\n      this._deferred_build = true;\n    } else if (deferBuild === undefined || this._deferred_build) {\n      this._string = URI.build(this._parts);\n      this._deferred_build = false;\n    }\n\n    return this;\n  };\n\n  p.clone = function () {\n    return new URI(this);\n  };\n\n  p.valueOf = p.toString = function () {\n    return this.build(false)._string;\n  };\n\n  function generateSimpleAccessor(_part) {\n    return function (v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        this._parts[_part] = v || null;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  function generatePrefixAccessor(_part, _key) {\n    return function (v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        if (v !== null) {\n          v = v + '';\n\n          if (v.charAt(0) === _key) {\n            v = v.substring(1);\n          }\n        }\n\n        this._parts[_part] = v;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  p.protocol = generateSimpleAccessor('protocol');\n  p.username = generateSimpleAccessor('username');\n  p.password = generateSimpleAccessor('password');\n  p.hostname = generateSimpleAccessor('hostname');\n  p.port = generateSimpleAccessor('port');\n  p.query = generatePrefixAccessor('query', '?');\n  p.fragment = generatePrefixAccessor('fragment', '#');\n\n  p.search = function (v, build) {\n    var t = this.query(v, build);\n    return typeof t === 'string' && t.length ? '?' + t : t;\n  };\n\n  p.hash = function (v, build) {\n    var t = this.fragment(v, build);\n    return typeof t === 'string' && t.length ? '#' + t : t;\n  };\n\n  p.pathname = function (v, build) {\n    if (v === undefined || v === true) {\n      var res = this._parts.path || (this._parts.hostname ? '/' : '');\n      return v ? (this._parts.urn ? URI.decodeUrnPath : URI.decodePath)(res) : res;\n    } else {\n      if (this._parts.urn) {\n        this._parts.path = v ? URI.recodeUrnPath(v) : '';\n      } else {\n        this._parts.path = v ? URI.recodePath(v) : '/';\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.path = p.pathname;\n\n  p.href = function (href, build) {\n    var key;\n\n    if (href === undefined) {\n      return this.toString();\n    }\n\n    this._string = '';\n    this._parts = URI._parts();\n\n    var _URI = href instanceof URI;\n\n    var _object = typeof href === 'object' && (href.hostname || href.path || href.pathname);\n\n    if (href.nodeName) {\n      var attribute = URI.getDomAttribute(href);\n      href = href[attribute] || '';\n      _object = false;\n    } // window.location is reported to be an object, but it's not the sort\n    // of object we're looking for:\n    // * location.protocol ends with a colon\n    // * location.query != object.search\n    // * location.hash != object.fragment\n    // simply serializing the unknown object should do the trick\n    // (for location, not for everything...)\n\n\n    if (!_URI && _object && href.pathname !== undefined) {\n      href = href.toString();\n    }\n\n    if (typeof href === 'string' || href instanceof String) {\n      this._parts = URI.parse(String(href), this._parts);\n    } else if (_URI || _object) {\n      var src = _URI ? href._parts : href;\n\n      for (key in src) {\n        if (key === 'query') {\n          continue;\n        }\n\n        if (hasOwn.call(this._parts, key)) {\n          this._parts[key] = src[key];\n        }\n      }\n\n      if (src.query) {\n        this.query(src.query, false);\n      }\n    } else {\n      throw new TypeError('invalid input');\n    }\n\n    this.build(!build);\n    return this;\n  }; // identification accessors\n\n\n  p.is = function (what) {\n    var ip = false;\n    var ip4 = false;\n    var ip6 = false;\n    var name = false;\n    var sld = false;\n    var idn = false;\n    var punycode = false;\n    var relative = !this._parts.urn;\n\n    if (this._parts.hostname) {\n      relative = false;\n      ip4 = URI.ip4_expression.test(this._parts.hostname);\n      ip6 = URI.ip6_expression.test(this._parts.hostname);\n      ip = ip4 || ip6;\n      name = !ip;\n      sld = name && SLD && SLD.has(this._parts.hostname);\n      idn = name && URI.idn_expression.test(this._parts.hostname);\n      punycode = name && URI.punycode_expression.test(this._parts.hostname);\n    }\n\n    switch (what.toLowerCase()) {\n      case 'relative':\n        return relative;\n\n      case 'absolute':\n        return !relative;\n      // hostname identification\n\n      case 'domain':\n      case 'name':\n        return name;\n\n      case 'sld':\n        return sld;\n\n      case 'ip':\n        return ip;\n\n      case 'ip4':\n      case 'ipv4':\n      case 'inet4':\n        return ip4;\n\n      case 'ip6':\n      case 'ipv6':\n      case 'inet6':\n        return ip6;\n\n      case 'idn':\n        return idn;\n\n      case 'url':\n        return !this._parts.urn;\n\n      case 'urn':\n        return !!this._parts.urn;\n\n      case 'punycode':\n        return punycode;\n    }\n\n    return null;\n  }; // component specific input validation\n\n\n  var _protocol = p.protocol;\n  var _port = p.port;\n  var _hostname = p.hostname;\n\n  p.protocol = function (v, build) {\n    if (v) {\n      // accept trailing ://\n      v = v.replace(/:(\\/\\/)?$/, '');\n\n      if (!v.match(URI.protocol_expression)) {\n        throw new TypeError('Protocol \"' + v + '\" contains characters other than [A-Z0-9.+-] or doesn\\'t start with [A-Z]');\n      }\n    }\n\n    return _protocol.call(this, v, build);\n  };\n\n  p.scheme = p.protocol;\n\n  p.port = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      if (v === 0) {\n        v = null;\n      }\n\n      if (v) {\n        v += '';\n\n        if (v.charAt(0) === ':') {\n          v = v.substring(1);\n        }\n\n        URI.ensureValidPort(v);\n      }\n    }\n\n    return _port.call(this, v, build);\n  };\n\n  p.hostname = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      var x = {\n        preventInvalidHostname: this._parts.preventInvalidHostname\n      };\n      var res = URI.parseHost(v, x);\n\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      v = x.hostname;\n\n      if (this._parts.preventInvalidHostname) {\n        URI.ensureValidHostname(v, this._parts.protocol);\n      }\n    }\n\n    return _hostname.call(this, v, build);\n  }; // compound accessors\n\n\n  p.origin = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      var protocol = this.protocol();\n      var authority = this.authority();\n\n      if (!authority) {\n        return '';\n      }\n\n      return (protocol ? protocol + '://' : '') + this.authority();\n    } else {\n      var origin = URI(v);\n      this.protocol(origin.protocol()).authority(origin.authority()).build(!build);\n      return this;\n    }\n  };\n\n  p.host = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildHost(this._parts) : '';\n    } else {\n      var res = URI.parseHost(v, this._parts);\n\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.authority = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildAuthority(this._parts) : '';\n    } else {\n      var res = URI.parseAuthority(v, this._parts);\n\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.userinfo = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      var t = URI.buildUserinfo(this._parts);\n      return t ? t.substring(0, t.length - 1) : t;\n    } else {\n      if (v[v.length - 1] !== '@') {\n        v += '@';\n      }\n\n      URI.parseUserinfo(v, this._parts);\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.resource = function (v, build) {\n    var parts;\n\n    if (v === undefined) {\n      return this.path() + this.search() + this.hash();\n    }\n\n    parts = URI.parse(v);\n    this._parts.path = parts.path;\n    this._parts.query = parts.query;\n    this._parts.fragment = parts.fragment;\n    this.build(!build);\n    return this;\n  }; // fraction accessors\n\n\n  p.subdomain = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    } // convenience, return \"www\" from \"www.example.org\"\n\n\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      } // grab domain and add another segment\n\n\n      var end = this._parts.hostname.length - this.domain().length - 1;\n      return this._parts.hostname.substring(0, end) || '';\n    } else {\n      var e = this._parts.hostname.length - this.domain().length;\n\n      var sub = this._parts.hostname.substring(0, e);\n\n      var replace = new RegExp('^' + escapeRegEx(sub));\n\n      if (v && v.charAt(v.length - 1) !== '.') {\n        v += '.';\n      }\n\n      if (v.indexOf(':') !== -1) {\n        throw new TypeError('Domains cannot contain colons');\n      }\n\n      if (v) {\n        URI.ensureValidHostname(v, this._parts.protocol);\n      }\n\n      this._parts.hostname = this._parts.hostname.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.domain = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    } // convenience, return \"example.org\" from \"www.example.org\"\n\n\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      } // if hostname consists of 1 or 2 segments, it must be the domain\n\n\n      var t = this._parts.hostname.match(/\\./g);\n\n      if (t && t.length < 2) {\n        return this._parts.hostname;\n      } // grab tld and add another segment\n\n\n      var end = this._parts.hostname.length - this.tld(build).length - 1;\n      end = this._parts.hostname.lastIndexOf('.', end - 1) + 1;\n      return this._parts.hostname.substring(end) || '';\n    } else {\n      if (!v) {\n        throw new TypeError('cannot set domain empty');\n      }\n\n      if (v.indexOf(':') !== -1) {\n        throw new TypeError('Domains cannot contain colons');\n      }\n\n      URI.ensureValidHostname(v, this._parts.protocol);\n\n      if (!this._parts.hostname || this.is('IP')) {\n        this._parts.hostname = v;\n      } else {\n        var replace = new RegExp(escapeRegEx(this.domain()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.tld = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    } // return \"org\" from \"www.example.org\"\n\n\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      var pos = this._parts.hostname.lastIndexOf('.');\n\n      var tld = this._parts.hostname.substring(pos + 1);\n\n      if (build !== true && SLD && SLD.list[tld.toLowerCase()]) {\n        return SLD.get(this._parts.hostname) || tld;\n      }\n\n      return tld;\n    } else {\n      var replace;\n\n      if (!v) {\n        throw new TypeError('cannot set TLD empty');\n      } else if (v.match(/[^a-zA-Z0-9-]/)) {\n        if (SLD && SLD.is(v)) {\n          replace = new RegExp(escapeRegEx(this.tld()) + '$');\n          this._parts.hostname = this._parts.hostname.replace(replace, v);\n        } else {\n          throw new TypeError('TLD \"' + v + '\" contains characters other than [A-Z0-9]');\n        }\n      } else if (!this._parts.hostname || this.is('IP')) {\n        throw new ReferenceError('cannot set TLD on non-domain host');\n      } else {\n        replace = new RegExp(escapeRegEx(this.tld()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.directory = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path && !this._parts.hostname) {\n        return '';\n      }\n\n      if (this._parts.path === '/') {\n        return '/';\n      }\n\n      var end = this._parts.path.length - this.filename().length - 1;\n      var res = this._parts.path.substring(0, end) || (this._parts.hostname ? '/' : '');\n      return v ? URI.decodePath(res) : res;\n    } else {\n      var e = this._parts.path.length - this.filename().length;\n\n      var directory = this._parts.path.substring(0, e);\n\n      var replace = new RegExp('^' + escapeRegEx(directory)); // fully qualifier directories begin with a slash\n\n      if (!this.is('relative')) {\n        if (!v) {\n          v = '/';\n        }\n\n        if (v.charAt(0) !== '/') {\n          v = '/' + v;\n        }\n      } // directories always end with a slash\n\n\n      if (v && v.charAt(v.length - 1) !== '/') {\n        v += '/';\n      }\n\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.filename = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v !== 'string') {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var pos = this._parts.path.lastIndexOf('/');\n\n      var res = this._parts.path.substring(pos + 1);\n\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      var mutatedDirectory = false;\n\n      if (v.charAt(0) === '/') {\n        v = v.substring(1);\n      }\n\n      if (v.match(/\\.?\\//)) {\n        mutatedDirectory = true;\n      }\n\n      var replace = new RegExp(escapeRegEx(this.filename()) + '$');\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n\n      if (mutatedDirectory) {\n        this.normalizePath(build);\n      } else {\n        this.build(!build);\n      }\n\n      return this;\n    }\n  };\n\n  p.suffix = function (v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var filename = this.filename();\n      var pos = filename.lastIndexOf('.');\n      var s, res;\n\n      if (pos === -1) {\n        return '';\n      } // suffix may only contain alnum characters (yup, I made this up.)\n\n\n      s = filename.substring(pos + 1);\n      res = /^[a-z0-9%]+$/i.test(s) ? s : '';\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      if (v.charAt(0) === '.') {\n        v = v.substring(1);\n      }\n\n      var suffix = this.suffix();\n      var replace;\n\n      if (!suffix) {\n        if (!v) {\n          return this;\n        }\n\n        this._parts.path += '.' + URI.recodePath(v);\n      } else if (!v) {\n        replace = new RegExp(escapeRegEx('.' + suffix) + '$');\n      } else {\n        replace = new RegExp(escapeRegEx(suffix) + '$');\n      }\n\n      if (replace) {\n        v = URI.recodePath(v);\n        this._parts.path = this._parts.path.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n\n  p.segment = function (segment, v, build) {\n    var separator = this._parts.urn ? ':' : '/';\n    var path = this.path();\n    var absolute = path.substring(0, 1) === '/';\n    var segments = path.split(separator);\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      throw new Error('Bad segment \"' + segment + '\", must be 0-based integer');\n    }\n\n    if (absolute) {\n      segments.shift();\n    }\n\n    if (segment < 0) {\n      // allow negative indexes to address from the end\n      segment = Math.max(segments.length + segment, 0);\n    }\n\n    if (v === undefined) {\n      /*jshint laxbreak: true */\n      return segment === undefined ? segments : segments[segment];\n      /*jshint laxbreak: false */\n    } else if (segment === null || segments[segment] === undefined) {\n      if (isArray(v)) {\n        segments = []; // collapse empty elements within array\n\n        for (var i = 0, l = v.length; i < l; i++) {\n          if (!v[i].length && (!segments.length || !segments[segments.length - 1].length)) {\n            continue;\n          }\n\n          if (segments.length && !segments[segments.length - 1].length) {\n            segments.pop();\n          }\n\n          segments.push(trimSlashes(v[i]));\n        }\n      } else if (v || typeof v === 'string') {\n        v = trimSlashes(v);\n\n        if (segments[segments.length - 1] === '') {\n          // empty trailing elements have to be overwritten\n          // to prevent results such as /foo//bar\n          segments[segments.length - 1] = v;\n        } else {\n          segments.push(v);\n        }\n      }\n    } else {\n      if (v) {\n        segments[segment] = trimSlashes(v);\n      } else {\n        segments.splice(segment, 1);\n      }\n    }\n\n    if (absolute) {\n      segments.unshift('');\n    }\n\n    return this.path(segments.join(separator), build);\n  };\n\n  p.segmentCoded = function (segment, v, build) {\n    var segments, i, l;\n\n    if (typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (v === undefined) {\n      segments = this.segment(segment, v, build);\n\n      if (!isArray(segments)) {\n        segments = segments !== undefined ? URI.decode(segments) : undefined;\n      } else {\n        for (i = 0, l = segments.length; i < l; i++) {\n          segments[i] = URI.decode(segments[i]);\n        }\n      }\n\n      return segments;\n    }\n\n    if (!isArray(v)) {\n      v = typeof v === 'string' || v instanceof String ? URI.encode(v) : v;\n    } else {\n      for (i = 0, l = v.length; i < l; i++) {\n        v[i] = URI.encode(v[i]);\n      }\n    }\n\n    return this.segment(segment, v, build);\n  }; // mutating query string\n\n\n  var q = p.query;\n\n  p.query = function (v, build) {\n    if (v === true) {\n      return URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    } else if (typeof v === 'function') {\n      var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n      var result = v.call(this, data);\n      this._parts.query = URI.buildQuery(result || data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else if (v !== undefined && typeof v !== 'string') {\n      this._parts.query = URI.buildQuery(v, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else {\n      return q.call(this, v, build);\n    }\n  };\n\n  p.setQuery = function (name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n\n    if (typeof name === 'string' || name instanceof String) {\n      data[name] = value !== undefined ? value : null;\n    } else if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          data[key] = name[key];\n        }\n      }\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n\n  p.addQuery = function (name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.addQuery(data, name, value === undefined ? null : value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n\n  p.removeQuery = function (name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.removeQuery(data, name, value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n\n  p.hasQuery = function (name, value, withinArray) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    return URI.hasQuery(data, name, value, withinArray);\n  };\n\n  p.setSearch = p.setQuery;\n  p.addSearch = p.addQuery;\n  p.removeSearch = p.removeQuery;\n  p.hasSearch = p.hasQuery; // sanitizing URLs\n\n  p.normalize = function () {\n    if (this._parts.urn) {\n      return this.normalizeProtocol(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();\n    }\n\n    return this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();\n  };\n\n  p.normalizeProtocol = function (build) {\n    if (typeof this._parts.protocol === 'string') {\n      this._parts.protocol = this._parts.protocol.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizeHostname = function (build) {\n    if (this._parts.hostname) {\n      if (this.is('IDN') && punycode) {\n        this._parts.hostname = punycode.toASCII(this._parts.hostname);\n      } else if (this.is('IPv6') && IPv6) {\n        this._parts.hostname = IPv6.best(this._parts.hostname);\n      }\n\n      this._parts.hostname = this._parts.hostname.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizePort = function (build) {\n    // remove port of it's the protocol's default\n    if (typeof this._parts.protocol === 'string' && this._parts.port === URI.defaultPorts[this._parts.protocol]) {\n      this._parts.port = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizePath = function (build) {\n    var _path = this._parts.path;\n\n    if (!_path) {\n      return this;\n    }\n\n    if (this._parts.urn) {\n      this._parts.path = URI.recodeUrnPath(this._parts.path);\n      this.build(!build);\n      return this;\n    }\n\n    if (this._parts.path === '/') {\n      return this;\n    }\n\n    _path = URI.recodePath(_path);\n\n    var _was_relative;\n\n    var _leadingParents = '';\n\n    var _parent, _pos; // handle relative paths\n\n\n    if (_path.charAt(0) !== '/') {\n      _was_relative = true;\n      _path = '/' + _path;\n    } // handle relative files (as opposed to directories)\n\n\n    if (_path.slice(-3) === '/..' || _path.slice(-2) === '/.') {\n      _path += '/';\n    } // resolve simples\n\n\n    _path = _path.replace(/(\\/(\\.\\/)+)|(\\/\\.$)/g, '/').replace(/\\/{2,}/g, '/'); // remember leading parents\n\n    if (_was_relative) {\n      _leadingParents = _path.substring(1).match(/^(\\.\\.\\/)+/) || '';\n\n      if (_leadingParents) {\n        _leadingParents = _leadingParents[0];\n      }\n    } // resolve parents\n\n\n    while (true) {\n      _parent = _path.search(/\\/\\.\\.(\\/|$)/);\n\n      if (_parent === -1) {\n        // no more ../ to resolve\n        break;\n      } else if (_parent === 0) {\n        // top level cannot be relative, skip it\n        _path = _path.substring(3);\n        continue;\n      }\n\n      _pos = _path.substring(0, _parent).lastIndexOf('/');\n\n      if (_pos === -1) {\n        _pos = _parent;\n      }\n\n      _path = _path.substring(0, _pos) + _path.substring(_parent + 3);\n    } // revert to relative\n\n\n    if (_was_relative && this.is('relative')) {\n      _path = _leadingParents + _path.substring(1);\n    }\n\n    this._parts.path = _path;\n    this.build(!build);\n    return this;\n  };\n\n  p.normalizePathname = p.normalizePath;\n\n  p.normalizeQuery = function (build) {\n    if (typeof this._parts.query === 'string') {\n      if (!this._parts.query.length) {\n        this._parts.query = null;\n      } else {\n        this.query(URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace));\n      }\n\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizeFragment = function (build) {\n    if (!this._parts.fragment) {\n      this._parts.fragment = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n\n  p.normalizeSearch = p.normalizeQuery;\n  p.normalizeHash = p.normalizeFragment;\n\n  p.iso8859 = function () {\n    // expect unicode input, iso8859 output\n    var e = URI.encode;\n    var d = URI.decode;\n    URI.encode = escape;\n    URI.decode = decodeURIComponent;\n\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n\n    return this;\n  };\n\n  p.unicode = function () {\n    // expect iso8859 input, unicode output\n    var e = URI.encode;\n    var d = URI.decode;\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = unescape;\n\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n\n    return this;\n  };\n\n  p.readable = function () {\n    var uri = this.clone(); // removing username, password, because they shouldn't be displayed according to RFC 3986\n\n    uri.username('').password('').normalize();\n    var t = '';\n\n    if (uri._parts.protocol) {\n      t += uri._parts.protocol + '://';\n    }\n\n    if (uri._parts.hostname) {\n      if (uri.is('punycode') && punycode) {\n        t += punycode.toUnicode(uri._parts.hostname);\n\n        if (uri._parts.port) {\n          t += ':' + uri._parts.port;\n        }\n      } else {\n        t += uri.host();\n      }\n    }\n\n    if (uri._parts.hostname && uri._parts.path && uri._parts.path.charAt(0) !== '/') {\n      t += '/';\n    }\n\n    t += uri.path(true);\n\n    if (uri._parts.query) {\n      var q = '';\n\n      for (var i = 0, qp = uri._parts.query.split('&'), l = qp.length; i < l; i++) {\n        var kv = (qp[i] || '').split('=');\n        q += '&' + URI.decodeQuery(kv[0], this._parts.escapeQuerySpace).replace(/&/g, '%26');\n\n        if (kv[1] !== undefined) {\n          q += '=' + URI.decodeQuery(kv[1], this._parts.escapeQuerySpace).replace(/&/g, '%26');\n        }\n      }\n\n      t += '?' + q.substring(1);\n    }\n\n    t += URI.decodeQuery(uri.hash(), true);\n    return t;\n  }; // resolving relative and absolute URLs\n\n\n  p.absoluteTo = function (base) {\n    var resolved = this.clone();\n    var properties = ['protocol', 'username', 'password', 'hostname', 'port'];\n    var basedir, i, p;\n\n    if (this._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    if (!(base instanceof URI)) {\n      base = new URI(base);\n    }\n\n    if (resolved._parts.protocol) {\n      // Directly returns even if this._parts.hostname is empty.\n      return resolved;\n    } else {\n      resolved._parts.protocol = base._parts.protocol;\n    }\n\n    if (this._parts.hostname) {\n      return resolved;\n    }\n\n    for (i = 0; p = properties[i]; i++) {\n      resolved._parts[p] = base._parts[p];\n    }\n\n    if (!resolved._parts.path) {\n      resolved._parts.path = base._parts.path;\n\n      if (!resolved._parts.query) {\n        resolved._parts.query = base._parts.query;\n      }\n    } else {\n      if (resolved._parts.path.substring(-2) === '..') {\n        resolved._parts.path += '/';\n      }\n\n      if (resolved.path().charAt(0) !== '/') {\n        basedir = base.directory();\n        basedir = basedir ? basedir : base.path().indexOf('/') === 0 ? '/' : '';\n        resolved._parts.path = (basedir ? basedir + '/' : '') + resolved._parts.path;\n        resolved.normalizePath();\n      }\n    }\n\n    resolved.build();\n    return resolved;\n  };\n\n  p.relativeTo = function (base) {\n    var relative = this.clone().normalize();\n    var relativeParts, baseParts, common, relativePath, basePath;\n\n    if (relative._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    base = new URI(base).normalize();\n    relativeParts = relative._parts;\n    baseParts = base._parts;\n    relativePath = relative.path();\n    basePath = base.path();\n\n    if (relativePath.charAt(0) !== '/') {\n      throw new Error('URI is already relative');\n    }\n\n    if (basePath.charAt(0) !== '/') {\n      throw new Error('Cannot calculate a URI relative to another relative URI');\n    }\n\n    if (relativeParts.protocol === baseParts.protocol) {\n      relativeParts.protocol = null;\n    }\n\n    if (relativeParts.username !== baseParts.username || relativeParts.password !== baseParts.password) {\n      return relative.build();\n    }\n\n    if (relativeParts.protocol !== null || relativeParts.username !== null || relativeParts.password !== null) {\n      return relative.build();\n    }\n\n    if (relativeParts.hostname === baseParts.hostname && relativeParts.port === baseParts.port) {\n      relativeParts.hostname = null;\n      relativeParts.port = null;\n    } else {\n      return relative.build();\n    }\n\n    if (relativePath === basePath) {\n      relativeParts.path = '';\n      return relative.build();\n    } // determine common sub path\n\n\n    common = URI.commonPath(relativePath, basePath); // If the paths have nothing in common, return a relative URL with the absolute path.\n\n    if (!common) {\n      return relative.build();\n    }\n\n    var parents = baseParts.path.substring(common.length).replace(/[^\\/]*$/, '').replace(/.*?\\//g, '../');\n    relativeParts.path = parents + relativeParts.path.substring(common.length) || './';\n    return relative.build();\n  }; // comparing URIs\n\n\n  p.equals = function (uri) {\n    var one = this.clone();\n    var two = new URI(uri);\n    var one_map = {};\n    var two_map = {};\n    var checked = {};\n    var one_query, two_query, key;\n    one.normalize();\n    two.normalize(); // exact match\n\n    if (one.toString() === two.toString()) {\n      return true;\n    } // extract query string\n\n\n    one_query = one.query();\n    two_query = two.query();\n    one.query('');\n    two.query(''); // definitely not equal if not even non-query parts match\n\n    if (one.toString() !== two.toString()) {\n      return false;\n    } // query parameters have the same length, even if they're permuted\n\n\n    if (one_query.length !== two_query.length) {\n      return false;\n    }\n\n    one_map = URI.parseQuery(one_query, this._parts.escapeQuerySpace);\n    two_map = URI.parseQuery(two_query, this._parts.escapeQuerySpace);\n\n    for (key in one_map) {\n      if (hasOwn.call(one_map, key)) {\n        if (!isArray(one_map[key])) {\n          if (one_map[key] !== two_map[key]) {\n            return false;\n          }\n        } else if (!arraysEqual(one_map[key], two_map[key])) {\n          return false;\n        }\n\n        checked[key] = true;\n      }\n    }\n\n    for (key in two_map) {\n      if (hasOwn.call(two_map, key)) {\n        if (!checked[key]) {\n          // two contains a parameter not present in one\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }; // state\n\n\n  p.preventInvalidHostname = function (v) {\n    this._parts.preventInvalidHostname = !!v;\n    return this;\n  };\n\n  p.duplicateQueryParameters = function (v) {\n    this._parts.duplicateQueryParameters = !!v;\n    return this;\n  };\n\n  p.escapeQuerySpace = function (v) {\n    this._parts.escapeQuerySpace = !!v;\n    return this;\n  };\n\n  return URI;\n});","map":{"version":3,"names":["root","factory","module","exports","require","define","amd","URI","punycode","IPv6","SecondLevelDomains","SLD","_URI","url","base","_urlSupplied","arguments","length","_baseSupplied","undefined","TypeError","location","href","absoluteTo","isInteger","value","test","version","p","prototype","hasOwn","Object","hasOwnProperty","escapeRegEx","string","replace","getType","String","toString","call","slice","isArray","obj","filterArrayValues","data","lookup","i","_match","splice","arrayContains","list","_type","match","arraysEqual","one","two","sort","l","trimSlashes","text","trim_expression","_parts","protocol","username","password","hostname","urn","port","path","query","fragment","preventInvalidHostname","duplicateQueryParameters","escapeQuerySpace","protocol_expression","idn_expression","punycode_expression","ip4_expression","ip6_expression","find_uri_expression","findUri","start","end","trim","parens","leading_whitespace_expression","ascii_tab_whitespace","defaultPorts","http","https","ftp","gopher","ws","wss","hostProtocols","invalid_hostname_characters","domAttributes","getDomAttribute","node","nodeName","toLowerCase","type","escapeForDumbFirefox36","escape","strictEncodeURIComponent","encodeURIComponent","encode","decode","decodeURIComponent","iso8859","unescape","unicode","characters","pathname","expression","map","reserved","urnpath","encodeQuery","escaped","decodeQuery","e","_part","generateAccessor","_group","c","generateSegmentedPathFunction","_sep","_codingFuncName","_innerCodingFuncName","actualCodingFunc","segments","split","join","decodePath","decodeUrnPath","recodePath","recodeUrnPath","encodeReserved","parse","parts","pos","indexOf","substring","parseAuthority","parseHost","bracketPos","t","charAt","firstColon","firstSlash","nextColon","ensureValidHostname","ensureValidPort","parseUserinfo","_string","firstBackSlash","lastIndexOf","shift","parseQuery","items","splits","v","name","push","build","requireAbsolutePath","buildAuthority","buildHost","buildUserinfo","buildQuery","unique","key","buildQueryParameter","addQuery","concat","setQuery","removeQuery","hasQuery","withinArray","_key","_booly","Boolean","op","joinPaths","input","nonEmptySegments","_segments","segment","s","uri","normalize","commonPath","Math","min","withinString","callback","options","_start","_end","_trim","_parens","_attributeOpen","lastIndex","exec","index","ignoreHtml","attributeOpen","max","search","parensEnd","parensMatch","parensMatchEnd","ignore","result","hasHostname","hasProtocol","rejectEmptyHostname","toASCII","Number","noConflict","removeAll","unconflicted","URITemplate","deferBuild","_deferred_build","clone","valueOf","generateSimpleAccessor","generatePrefixAccessor","hash","res","_object","attribute","src","is","what","ip","ip4","ip6","sld","idn","relative","has","_protocol","_port","_hostname","scheme","x","origin","authority","host","userinfo","resource","subdomain","domain","sub","RegExp","tld","get","ReferenceError","directory","filename","decodePathSegment","mutatedDirectory","normalizePath","suffix","separator","absolute","Error","pop","unshift","segmentCoded","q","setSearch","addSearch","removeSearch","hasSearch","normalizeProtocol","normalizeQuery","normalizeFragment","normalizeHostname","normalizePort","best","_path","_was_relative","_leadingParents","_parent","_pos","normalizePathname","normalizeSearch","normalizeHash","d","readable","toUnicode","qp","kv","resolved","properties","basedir","relativeTo","relativeParts","baseParts","common","relativePath","basePath","parents","equals","one_map","two_map","checked","one_query","two_query"],"sources":["/home/user/Desktop/TruthMachine/hello-world-part-four-tutorial/starter-files/node_modules/urijs/src/URI.js"],"sourcesContent":["/*!\n * URI.js - Mutating URLs\n *\n * Version: 1.19.11\n *\n * Author: Rodney Rehm\n * Web: http://medialize.github.io/URI.js/\n *\n * Licensed under\n *   MIT License http://www.opensource.org/licenses/mit-license\n *\n */\n(function (root, factory) {\n  'use strict';\n  // https://github.com/umdjs/umd/blob/master/returnExports.js\n  if (typeof module === 'object' && module.exports) {\n    // Node\n    module.exports = factory(require('./punycode'), require('./IPv6'), require('./SecondLevelDomains'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['./punycode', './IPv6', './SecondLevelDomains'], factory);\n  } else {\n    // Browser globals (root is window)\n    root.URI = factory(root.punycode, root.IPv6, root.SecondLevelDomains, root);\n  }\n}(this, function (punycode, IPv6, SLD, root) {\n  'use strict';\n  /*global location, escape, unescape */\n  // FIXME: v2.0.0 renamce non-camelCase properties to uppercase\n  /*jshint camelcase: false */\n\n  // save current URI variable, if any\n  var _URI = root && root.URI;\n\n  function URI(url, base) {\n    var _urlSupplied = arguments.length >= 1;\n    var _baseSupplied = arguments.length >= 2;\n\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof URI)) {\n      if (_urlSupplied) {\n        if (_baseSupplied) {\n          return new URI(url, base);\n        }\n\n        return new URI(url);\n      }\n\n      return new URI();\n    }\n\n    if (url === undefined) {\n      if (_urlSupplied) {\n        throw new TypeError('undefined is not a valid argument for URI');\n      }\n\n      if (typeof location !== 'undefined') {\n        url = location.href + '';\n      } else {\n        url = '';\n      }\n    }\n\n    if (url === null) {\n      if (_urlSupplied) {\n        throw new TypeError('null is not a valid argument for URI');\n      }\n    }\n\n    this.href(url);\n\n    // resolve to base according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#constructor\n    if (base !== undefined) {\n      return this.absoluteTo(base);\n    }\n\n    return this;\n  }\n\n  function isInteger(value) {\n    return /^[0-9]+$/.test(value);\n  }\n\n  URI.version = '1.19.11';\n\n  var p = URI.prototype;\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  function escapeRegEx(string) {\n    // https://github.com/medialize/URI.js/commit/85ac21783c11f8ccab06106dba9735a31a86924d#commitcomment-821963\n    return string.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  function getType(value) {\n    // IE8 doesn't return [Object Undefined] but [Object Object] for undefined value\n    if (value === undefined) {\n      return 'Undefined';\n    }\n\n    return String(Object.prototype.toString.call(value)).slice(8, -1);\n  }\n\n  function isArray(obj) {\n    return getType(obj) === 'Array';\n  }\n\n  function filterArrayValues(data, value) {\n    var lookup = {};\n    var i, length;\n\n    if (getType(value) === 'RegExp') {\n      lookup = null;\n    } else if (isArray(value)) {\n      for (i = 0, length = value.length; i < length; i++) {\n        lookup[value[i]] = true;\n      }\n    } else {\n      lookup[value] = true;\n    }\n\n    for (i = 0, length = data.length; i < length; i++) {\n      /*jshint laxbreak: true */\n      var _match = lookup && lookup[data[i]] !== undefined\n        || !lookup && value.test(data[i]);\n      /*jshint laxbreak: false */\n      if (_match) {\n        data.splice(i, 1);\n        length--;\n        i--;\n      }\n    }\n\n    return data;\n  }\n\n  function arrayContains(list, value) {\n    var i, length;\n\n    // value may be string, number, array, regexp\n    if (isArray(value)) {\n      // Note: this can be optimized to O(n) (instead of current O(m * n))\n      for (i = 0, length = value.length; i < length; i++) {\n        if (!arrayContains(list, value[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    var _type = getType(value);\n    for (i = 0, length = list.length; i < length; i++) {\n      if (_type === 'RegExp') {\n        if (typeof list[i] === 'string' && list[i].match(value)) {\n          return true;\n        }\n      } else if (list[i] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function arraysEqual(one, two) {\n    if (!isArray(one) || !isArray(two)) {\n      return false;\n    }\n\n    // arrays can't be equal if they have different amount of content\n    if (one.length !== two.length) {\n      return false;\n    }\n\n    one.sort();\n    two.sort();\n\n    for (var i = 0, l = one.length; i < l; i++) {\n      if (one[i] !== two[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function trimSlashes(text) {\n    var trim_expression = /^\\/+|\\/+$/g;\n    return text.replace(trim_expression, '');\n  }\n\n  URI._parts = function() {\n    return {\n      protocol: null,\n      username: null,\n      password: null,\n      hostname: null,\n      urn: null,\n      port: null,\n      path: null,\n      query: null,\n      fragment: null,\n      // state\n      preventInvalidHostname: URI.preventInvalidHostname,\n      duplicateQueryParameters: URI.duplicateQueryParameters,\n      escapeQuerySpace: URI.escapeQuerySpace\n    };\n  };\n  // state: throw on invalid hostname\n  // see https://github.com/medialize/URI.js/pull/345\n  // and https://github.com/medialize/URI.js/issues/354\n  URI.preventInvalidHostname = false;\n  // state: allow duplicate query parameters (a=1&a=1)\n  URI.duplicateQueryParameters = false;\n  // state: replaces + with %20 (space in query strings)\n  URI.escapeQuerySpace = true;\n  // static properties\n  URI.protocol_expression = /^[a-z][a-z0-9.+-]*$/i;\n  URI.idn_expression = /[^a-z0-9\\._-]/i;\n  URI.punycode_expression = /(xn--)/i;\n  // well, 333.444.555.666 matches, but it sure ain't no IPv4 - do we care?\n  URI.ip4_expression = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n  // credits to Rich Brown\n  // source: http://forums.intermapper.com/viewtopic.php?p=1096#1096\n  // specification: http://www.ietf.org/rfc/rfc4291.txt\n  URI.ip6_expression = /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/;\n  // expression used is \"gruber revised\" (@gruber v2) determined to be the\n  // best solution in a regex-golf we did a couple of ages ago at\n  // * http://mathiasbynens.be/demo/url-regex\n  // * http://rodneyrehm.de/t/url-regex.html\n  URI.find_uri_expression = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/ig;\n  URI.findUri = {\n    // valid \"scheme://\" or \"www.\"\n    start: /\\b(?:([a-z][a-z0-9.+-]*:\\/\\/)|www\\.)/gi,\n    // everything up to the next whitespace\n    end: /[\\s\\r\\n]|$/,\n    // trim trailing punctuation captured by end RegExp\n    trim: /[`!()\\[\\]{};:'\".,<>?«»“”„‘’]+$/,\n    // balanced parens inclusion (), [], {}, <>\n    parens: /(\\([^\\)]*\\)|\\[[^\\]]*\\]|\\{[^}]*\\}|<[^>]*>)/g,\n  };\n  URI.leading_whitespace_expression = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  // https://infra.spec.whatwg.org/#ascii-tab-or-newline\n  URI.ascii_tab_whitespace = /[\\u0009\\u000A\\u000D]+/g\n  // http://www.iana.org/assignments/uri-schemes.html\n  // http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Well-known_ports\n  URI.defaultPorts = {\n    http: '80',\n    https: '443',\n    ftp: '21',\n    gopher: '70',\n    ws: '80',\n    wss: '443'\n  };\n  // list of protocols which always require a hostname\n  URI.hostProtocols = [\n    'http',\n    'https'\n  ];\n\n  // allowed hostname characters according to RFC 3986\n  // ALPHA DIGIT \"-\" \".\" \"_\" \"~\" \"!\" \"$\" \"&\" \"'\" \"(\" \")\" \"*\" \"+\" \",\" \";\" \"=\" %encoded\n  // I've never seen a (non-IDN) hostname other than: ALPHA DIGIT . - _\n  URI.invalid_hostname_characters = /[^a-zA-Z0-9\\.\\-:_]/;\n  // map DOM Elements to their URI attribute\n  URI.domAttributes = {\n    'a': 'href',\n    'blockquote': 'cite',\n    'link': 'href',\n    'base': 'href',\n    'script': 'src',\n    'form': 'action',\n    'img': 'src',\n    'area': 'href',\n    'iframe': 'src',\n    'embed': 'src',\n    'source': 'src',\n    'track': 'src',\n    'input': 'src', // but only if type=\"image\"\n    'audio': 'src',\n    'video': 'src'\n  };\n  URI.getDomAttribute = function(node) {\n    if (!node || !node.nodeName) {\n      return undefined;\n    }\n\n    var nodeName = node.nodeName.toLowerCase();\n    // <input> should only expose src for type=\"image\"\n    if (nodeName === 'input' && node.type !== 'image') {\n      return undefined;\n    }\n\n    return URI.domAttributes[nodeName];\n  };\n\n  function escapeForDumbFirefox36(value) {\n    // https://github.com/medialize/URI.js/issues/91\n    return escape(value);\n  }\n\n  // encoding / decoding according to RFC3986\n  function strictEncodeURIComponent(string) {\n    // see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURIComponent\n    return encodeURIComponent(string)\n      .replace(/[!'()*]/g, escapeForDumbFirefox36)\n      .replace(/\\*/g, '%2A');\n  }\n  URI.encode = strictEncodeURIComponent;\n  URI.decode = decodeURIComponent;\n  URI.iso8859 = function() {\n    URI.encode = escape;\n    URI.decode = unescape;\n  };\n  URI.unicode = function() {\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = decodeURIComponent;\n  };\n  URI.characters = {\n    pathname: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig,\n        map: {\n          // -._~!'()*\n          '%24': '$',\n          '%26': '&',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%3A': ':',\n          '%40': '@'\n        }\n      },\n      decode: {\n        expression: /[\\/\\?#]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23'\n        }\n      }\n    },\n    reserved: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,\n        map: {\n          // gen-delims\n          '%3A': ':',\n          '%2F': '/',\n          '%3F': '?',\n          '%23': '#',\n          '%5B': '[',\n          '%5D': ']',\n          '%40': '@',\n          // sub-delims\n          '%21': '!',\n          '%24': '$',\n          '%26': '&',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '='\n        }\n      }\n    },\n    urnpath: {\n      // The characters under `encode` are the characters called out by RFC 2141 as being acceptable\n      // for usage in a URN. RFC2141 also calls out \"-\", \".\", and \"_\" as acceptable characters, but\n      // these aren't encoded by encodeURIComponent, so we don't have to call them out here. Also\n      // note that the colon character is not featured in the encoding map; this is because URI.js\n      // gives the colons in URNs semantic meaning as the delimiters of path segements, and so it\n      // should not appear unencoded in a segment itself.\n      // See also the note above about RFC3986 and capitalalized hex digits.\n      encode: {\n        expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig,\n        map: {\n          '%21': '!',\n          '%24': '$',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%40': '@'\n        }\n      },\n      // These characters are the characters called out by RFC2141 as \"reserved\" characters that\n      // should never appear in a URN, plus the colon character (see note above).\n      decode: {\n        expression: /[\\/\\?#:]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23',\n          ':': '%3A'\n        }\n      }\n    }\n  };\n  URI.encodeQuery = function(string, escapeQuerySpace) {\n    var escaped = URI.encode(string + '');\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    return escapeQuerySpace ? escaped.replace(/%20/g, '+') : escaped;\n  };\n  URI.decodeQuery = function(string, escapeQuerySpace) {\n    string += '';\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    try {\n      return URI.decode(escapeQuerySpace ? string.replace(/\\+/g, '%20') : string);\n    } catch(e) {\n      // we're not going to mess with weird encodings,\n      // give up and return the undecoded original string\n      // see https://github.com/medialize/URI.js/issues/87\n      // see https://github.com/medialize/URI.js/issues/92\n      return string;\n    }\n  };\n  // generate encode/decode path functions\n  var _parts = {'encode':'encode', 'decode':'decode'};\n  var _part;\n  var generateAccessor = function(_group, _part) {\n    return function(string) {\n      try {\n        return URI[_part](string + '').replace(URI.characters[_group][_part].expression, function(c) {\n          return URI.characters[_group][_part].map[c];\n        });\n      } catch (e) {\n        // we're not going to mess with weird encodings,\n        // give up and return the undecoded original string\n        // see https://github.com/medialize/URI.js/issues/87\n        // see https://github.com/medialize/URI.js/issues/92\n        return string;\n      }\n    };\n  };\n\n  for (_part in _parts) {\n    URI[_part + 'PathSegment'] = generateAccessor('pathname', _parts[_part]);\n    URI[_part + 'UrnPathSegment'] = generateAccessor('urnpath', _parts[_part]);\n  }\n\n  var generateSegmentedPathFunction = function(_sep, _codingFuncName, _innerCodingFuncName) {\n    return function(string) {\n      // Why pass in names of functions, rather than the function objects themselves? The\n      // definitions of some functions (but in particular, URI.decode) will occasionally change due\n      // to URI.js having ISO8859 and Unicode modes. Passing in the name and getting it will ensure\n      // that the functions we use here are \"fresh\".\n      var actualCodingFunc;\n      if (!_innerCodingFuncName) {\n        actualCodingFunc = URI[_codingFuncName];\n      } else {\n        actualCodingFunc = function(string) {\n          return URI[_codingFuncName](URI[_innerCodingFuncName](string));\n        };\n      }\n\n      var segments = (string + '').split(_sep);\n\n      for (var i = 0, length = segments.length; i < length; i++) {\n        segments[i] = actualCodingFunc(segments[i]);\n      }\n\n      return segments.join(_sep);\n    };\n  };\n\n  // This takes place outside the above loop because we don't want, e.g., encodeUrnPath functions.\n  URI.decodePath = generateSegmentedPathFunction('/', 'decodePathSegment');\n  URI.decodeUrnPath = generateSegmentedPathFunction(':', 'decodeUrnPathSegment');\n  URI.recodePath = generateSegmentedPathFunction('/', 'encodePathSegment', 'decode');\n  URI.recodeUrnPath = generateSegmentedPathFunction(':', 'encodeUrnPathSegment', 'decode');\n\n  URI.encodeReserved = generateAccessor('reserved', 'encode');\n\n  URI.parse = function(string, parts) {\n    var pos;\n    if (!parts) {\n      parts = {\n        preventInvalidHostname: URI.preventInvalidHostname\n      };\n    }\n\n    string = string.replace(URI.leading_whitespace_expression, '')\n    // https://infra.spec.whatwg.org/#ascii-tab-or-newline\n    string = string.replace(URI.ascii_tab_whitespace, '')\n\n    // [protocol\"://\"[username[\":\"password]\"@\"]hostname[\":\"port]\"/\"?][path][\"?\"querystring][\"#\"fragment]\n\n    // extract fragment\n    pos = string.indexOf('#');\n    if (pos > -1) {\n      // escaping?\n      parts.fragment = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    }\n\n    // extract query\n    pos = string.indexOf('?');\n    if (pos > -1) {\n      // escaping?\n      parts.query = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    }\n\n    // slashes and backslashes have lost all meaning for the web protocols (https, http, wss, ws)\n    string = string.replace(/^(https?|ftp|wss?)?:+[/\\\\]*/i, '$1://');\n    // slashes and backslashes have lost all meaning for scheme relative URLs\n    string = string.replace(/^[/\\\\]{2,}/i, '//');\n\n    // extract protocol\n    if (string.substring(0, 2) === '//') {\n      // relative-scheme\n      parts.protocol = null;\n      string = string.substring(2);\n      // extract \"user:pass@host:port\"\n      string = URI.parseAuthority(string, parts);\n    } else {\n      pos = string.indexOf(':');\n      if (pos > -1) {\n        parts.protocol = string.substring(0, pos) || null;\n        if (parts.protocol && !parts.protocol.match(URI.protocol_expression)) {\n          // : may be within the path\n          parts.protocol = undefined;\n        } else if (string.substring(pos + 1, pos + 3).replace(/\\\\/g, '/') === '//') {\n          string = string.substring(pos + 3);\n\n          // extract \"user:pass@host:port\"\n          string = URI.parseAuthority(string, parts);\n        } else {\n          string = string.substring(pos + 1);\n          parts.urn = true;\n        }\n      }\n    }\n\n    // what's left must be the path\n    parts.path = string;\n\n    // and we're done\n    return parts;\n  };\n  URI.parseHost = function(string, parts) {\n    if (!string) {\n      string = '';\n    }\n\n    // Copy chrome, IE, opera backslash-handling behavior.\n    // Back slashes before the query string get converted to forward slashes\n    // See: https://github.com/joyent/node/blob/386fd24f49b0e9d1a8a076592a404168faeecc34/lib/url.js#L115-L124\n    // See: https://code.google.com/p/chromium/issues/detail?id=25916\n    // https://github.com/medialize/URI.js/pull/233\n    string = string.replace(/\\\\/g, '/');\n\n    // extract host:port\n    var pos = string.indexOf('/');\n    var bracketPos;\n    var t;\n\n    if (pos === -1) {\n      pos = string.length;\n    }\n\n    if (string.charAt(0) === '[') {\n      // IPv6 host - http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04#section-6\n      // I claim most client software breaks on IPv6 anyways. To simplify things, URI only accepts\n      // IPv6+port in the format [2001:db8::1]:80 (for the time being)\n      bracketPos = string.indexOf(']');\n      parts.hostname = string.substring(1, bracketPos) || null;\n      parts.port = string.substring(bracketPos + 2, pos) || null;\n      if (parts.port === '/') {\n        parts.port = null;\n      }\n    } else {\n      var firstColon = string.indexOf(':');\n      var firstSlash = string.indexOf('/');\n      var nextColon = string.indexOf(':', firstColon + 1);\n      if (nextColon !== -1 && (firstSlash === -1 || nextColon < firstSlash)) {\n        // IPv6 host contains multiple colons - but no port\n        // this notation is actually not allowed by RFC 3986, but we're a liberal parser\n        parts.hostname = string.substring(0, pos) || null;\n        parts.port = null;\n      } else {\n        t = string.substring(0, pos).split(':');\n        parts.hostname = t[0] || null;\n        parts.port = t[1] || null;\n      }\n    }\n\n    if (parts.hostname && string.substring(pos).charAt(0) !== '/') {\n      pos++;\n      string = '/' + string;\n    }\n\n    if (parts.preventInvalidHostname) {\n      URI.ensureValidHostname(parts.hostname, parts.protocol);\n    }\n\n    if (parts.port) {\n      URI.ensureValidPort(parts.port);\n    }\n\n    return string.substring(pos) || '/';\n  };\n  URI.parseAuthority = function(string, parts) {\n    string = URI.parseUserinfo(string, parts);\n    return URI.parseHost(string, parts);\n  };\n  URI.parseUserinfo = function(string, parts) {\n    // extract username:password\n    var _string = string\n    var firstBackSlash = string.indexOf('\\\\');\n    if (firstBackSlash !== -1) {\n      string = string.replace(/\\\\/g, '/')\n    }\n    var firstSlash = string.indexOf('/');\n    var pos = string.lastIndexOf('@', firstSlash > -1 ? firstSlash : string.length - 1);\n    var t;\n\n    // authority@ must come before /path or \\path\n    if (pos > -1 && (firstSlash === -1 || pos < firstSlash)) {\n      t = string.substring(0, pos).split(':');\n      parts.username = t[0] ? URI.decode(t[0]) : null;\n      t.shift();\n      parts.password = t[0] ? URI.decode(t.join(':')) : null;\n      string = _string.substring(pos + 1);\n    } else {\n      parts.username = null;\n      parts.password = null;\n    }\n\n    return string;\n  };\n  URI.parseQuery = function(string, escapeQuerySpace) {\n    if (!string) {\n      return {};\n    }\n\n    // throw out the funky business - \"?\"[name\"=\"value\"&\"]+\n    string = string.replace(/&+/g, '&').replace(/^\\?*&*|&+$/g, '');\n\n    if (!string) {\n      return {};\n    }\n\n    var items = {};\n    var splits = string.split('&');\n    var length = splits.length;\n    var v, name, value;\n\n    for (var i = 0; i < length; i++) {\n      v = splits[i].split('=');\n      name = URI.decodeQuery(v.shift(), escapeQuerySpace);\n      // no \"=\" is null according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters\n      value = v.length ? URI.decodeQuery(v.join('='), escapeQuerySpace) : null;\n\n      if (name === '__proto__') {\n        // ignore attempt at exploiting JavaScript internals\n        continue;\n      } else if (hasOwn.call(items, name)) {\n        if (typeof items[name] === 'string' || items[name] === null) {\n          items[name] = [items[name]];\n        }\n\n        items[name].push(value);\n      } else {\n        items[name] = value;\n      }\n    }\n\n    return items;\n  };\n\n  URI.build = function(parts) {\n    var t = '';\n    var requireAbsolutePath = false\n\n    if (parts.protocol) {\n      t += parts.protocol + ':';\n    }\n\n    if (!parts.urn && (t || parts.hostname)) {\n      t += '//';\n      requireAbsolutePath = true\n    }\n\n    t += (URI.buildAuthority(parts) || '');\n\n    if (typeof parts.path === 'string') {\n      if (parts.path.charAt(0) !== '/' && requireAbsolutePath) {\n        t += '/';\n      }\n\n      t += parts.path;\n    }\n\n    if (typeof parts.query === 'string' && parts.query) {\n      t += '?' + parts.query;\n    }\n\n    if (typeof parts.fragment === 'string' && parts.fragment) {\n      t += '#' + parts.fragment;\n    }\n    return t;\n  };\n  URI.buildHost = function(parts) {\n    var t = '';\n\n    if (!parts.hostname) {\n      return '';\n    } else if (URI.ip6_expression.test(parts.hostname)) {\n      t += '[' + parts.hostname + ']';\n    } else {\n      t += parts.hostname;\n    }\n\n    if (parts.port) {\n      t += ':' + parts.port;\n    }\n\n    return t;\n  };\n  URI.buildAuthority = function(parts) {\n    return URI.buildUserinfo(parts) + URI.buildHost(parts);\n  };\n  URI.buildUserinfo = function(parts) {\n    var t = '';\n\n    if (parts.username) {\n      t += URI.encode(parts.username);\n    }\n\n    if (parts.password) {\n      t += ':' + URI.encode(parts.password);\n    }\n\n    if (t) {\n      t += '@';\n    }\n\n    return t;\n  };\n  URI.buildQuery = function(data, duplicateQueryParameters, escapeQuerySpace) {\n    // according to http://tools.ietf.org/html/rfc3986 or http://labs.apache.org/webarch/uri/rfc/rfc3986.html\n    // being »-._~!$&'()*+,;=:@/?« %HEX and alnum are allowed\n    // the RFC explicitly states ?/foo being a valid use case, no mention of parameter syntax!\n    // URI.js treats the query string as being application/x-www-form-urlencoded\n    // see http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type\n\n    var t = '';\n    var unique, key, i, length;\n    for (key in data) {\n      if (key === '__proto__') {\n        // ignore attempt at exploiting JavaScript internals\n        continue;\n      } else if (hasOwn.call(data, key)) {\n        if (isArray(data[key])) {\n          unique = {};\n          for (i = 0, length = data[key].length; i < length; i++) {\n            if (data[key][i] !== undefined && unique[data[key][i] + ''] === undefined) {\n              t += '&' + URI.buildQueryParameter(key, data[key][i], escapeQuerySpace);\n              if (duplicateQueryParameters !== true) {\n                unique[data[key][i] + ''] = true;\n              }\n            }\n          }\n        } else if (data[key] !== undefined) {\n          t += '&' + URI.buildQueryParameter(key, data[key], escapeQuerySpace);\n        }\n      }\n    }\n\n    return t.substring(1);\n  };\n  URI.buildQueryParameter = function(name, value, escapeQuerySpace) {\n    // http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type -- application/x-www-form-urlencoded\n    // don't append \"=\" for null values, according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#url-parameter-serialization\n    return URI.encodeQuery(name, escapeQuerySpace) + (value !== null ? '=' + URI.encodeQuery(value, escapeQuerySpace) : '');\n  };\n\n  URI.addQuery = function(data, name, value) {\n    if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.addQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (data[name] === undefined) {\n        data[name] = value;\n        return;\n      } else if (typeof data[name] === 'string') {\n        data[name] = [data[name]];\n      }\n\n      if (!isArray(value)) {\n        value = [value];\n      }\n\n      data[name] = (data[name] || []).concat(value);\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n  };\n\n  URI.setQuery = function(data, name, value) {\n    if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.setQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      data[name] = value === undefined ? null : value;\n    } else {\n      throw new TypeError('URI.setQuery() accepts an object, string as the name parameter');\n    }\n  };\n\n  URI.removeQuery = function(data, name, value) {\n    var i, length, key;\n\n    if (isArray(name)) {\n      for (i = 0, length = name.length; i < length; i++) {\n        data[name[i]] = undefined;\n      }\n    } else if (getType(name) === 'RegExp') {\n      for (key in data) {\n        if (name.test(key)) {\n          data[key] = undefined;\n        }\n      }\n    } else if (typeof name === 'object') {\n      for (key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.removeQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (value !== undefined) {\n        if (getType(value) === 'RegExp') {\n          if (!isArray(data[name]) && value.test(data[name])) {\n            data[name] = undefined;\n          } else {\n            data[name] = filterArrayValues(data[name], value);\n          }\n        } else if (data[name] === String(value) && (!isArray(value) || value.length === 1)) {\n          data[name] = undefined;\n        } else if (isArray(data[name])) {\n          data[name] = filterArrayValues(data[name], value);\n        }\n      } else {\n        data[name] = undefined;\n      }\n    } else {\n      throw new TypeError('URI.removeQuery() accepts an object, string, RegExp as the first parameter');\n    }\n  };\n  URI.hasQuery = function(data, name, value, withinArray) {\n    switch (getType(name)) {\n      case 'String':\n        // Nothing to do here\n        break;\n\n      case 'RegExp':\n        for (var key in data) {\n          if (hasOwn.call(data, key)) {\n            if (name.test(key) && (value === undefined || URI.hasQuery(data, key, value))) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n\n      case 'Object':\n        for (var _key in name) {\n          if (hasOwn.call(name, _key)) {\n            if (!URI.hasQuery(data, _key, name[_key])) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts a string, regular expression or object as the name parameter');\n    }\n\n    switch (getType(value)) {\n      case 'Undefined':\n        // true if exists (but may be empty)\n        return name in data; // data[name] !== undefined;\n\n      case 'Boolean':\n        // true if exists and non-empty\n        var _booly = Boolean(isArray(data[name]) ? data[name].length : data[name]);\n        return value === _booly;\n\n      case 'Function':\n        // allow complex comparison\n        return !!value(data[name], name, data);\n\n      case 'Array':\n        if (!isArray(data[name])) {\n          return false;\n        }\n\n        var op = withinArray ? arrayContains : arraysEqual;\n        return op(data[name], value);\n\n      case 'RegExp':\n        if (!isArray(data[name])) {\n          return Boolean(data[name] && data[name].match(value));\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      case 'Number':\n        value = String(value);\n        /* falls through */\n      case 'String':\n        if (!isArray(data[name])) {\n          return data[name] === value;\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter');\n    }\n  };\n\n\n  URI.joinPaths = function() {\n    var input = [];\n    var segments = [];\n    var nonEmptySegments = 0;\n\n    for (var i = 0; i < arguments.length; i++) {\n      var url = new URI(arguments[i]);\n      input.push(url);\n      var _segments = url.segment();\n      for (var s = 0; s < _segments.length; s++) {\n        if (typeof _segments[s] === 'string') {\n          segments.push(_segments[s]);\n        }\n\n        if (_segments[s]) {\n          nonEmptySegments++;\n        }\n      }\n    }\n\n    if (!segments.length || !nonEmptySegments) {\n      return new URI('');\n    }\n\n    var uri = new URI('').segment(segments);\n\n    if (input[0].path() === '' || input[0].path().slice(0, 1) === '/') {\n      uri.path('/' + uri.path());\n    }\n\n    return uri.normalize();\n  };\n\n  URI.commonPath = function(one, two) {\n    var length = Math.min(one.length, two.length);\n    var pos;\n\n    // find first non-matching character\n    for (pos = 0; pos < length; pos++) {\n      if (one.charAt(pos) !== two.charAt(pos)) {\n        pos--;\n        break;\n      }\n    }\n\n    if (pos < 1) {\n      return one.charAt(0) === two.charAt(0) && one.charAt(0) === '/' ? '/' : '';\n    }\n\n    // revert to last /\n    if (one.charAt(pos) !== '/' || two.charAt(pos) !== '/') {\n      pos = one.substring(0, pos).lastIndexOf('/');\n    }\n\n    return one.substring(0, pos + 1);\n  };\n\n  URI.withinString = function(string, callback, options) {\n    options || (options = {});\n    var _start = options.start || URI.findUri.start;\n    var _end = options.end || URI.findUri.end;\n    var _trim = options.trim || URI.findUri.trim;\n    var _parens = options.parens || URI.findUri.parens;\n    var _attributeOpen = /[a-z0-9-]=[\"']?$/i;\n\n    _start.lastIndex = 0;\n    while (true) {\n      var match = _start.exec(string);\n      if (!match) {\n        break;\n      }\n\n      var start = match.index;\n      if (options.ignoreHtml) {\n        // attribut(e=[\"']?$)\n        var attributeOpen = string.slice(Math.max(start - 3, 0), start);\n        if (attributeOpen && _attributeOpen.test(attributeOpen)) {\n          continue;\n        }\n      }\n\n      var end = start + string.slice(start).search(_end);\n      var slice = string.slice(start, end);\n      // make sure we include well balanced parens\n      var parensEnd = -1;\n      while (true) {\n        var parensMatch = _parens.exec(slice);\n        if (!parensMatch) {\n          break;\n        }\n\n        var parensMatchEnd = parensMatch.index + parensMatch[0].length;\n        parensEnd = Math.max(parensEnd, parensMatchEnd);\n      }\n\n      if (parensEnd > -1) {\n        slice = slice.slice(0, parensEnd) + slice.slice(parensEnd).replace(_trim, '');\n      } else {\n        slice = slice.replace(_trim, '');\n      }\n\n      if (slice.length <= match[0].length) {\n        // the extract only contains the starting marker of a URI,\n        // e.g. \"www\" or \"http://\"\n        continue;\n      }\n\n      if (options.ignore && options.ignore.test(slice)) {\n        continue;\n      }\n\n      end = start + slice.length;\n      var result = callback(slice, start, end, string);\n      if (result === undefined) {\n        _start.lastIndex = end;\n        continue;\n      }\n\n      result = String(result);\n      string = string.slice(0, start) + result + string.slice(end);\n      _start.lastIndex = start + result.length;\n    }\n\n    _start.lastIndex = 0;\n    return string;\n  };\n\n  URI.ensureValidHostname = function(v, protocol) {\n    // Theoretically URIs allow percent-encoding in Hostnames (according to RFC 3986)\n    // they are not part of DNS and therefore ignored by URI.js\n\n    var hasHostname = !!v; // not null and not an empty string\n    var hasProtocol = !!protocol;\n    var rejectEmptyHostname = false;\n\n    if (hasProtocol) {\n      rejectEmptyHostname = arrayContains(URI.hostProtocols, protocol);\n    }\n\n    if (rejectEmptyHostname && !hasHostname) {\n      throw new TypeError('Hostname cannot be empty, if protocol is ' + protocol);\n    } else if (v && v.match(URI.invalid_hostname_characters)) {\n      // test punycode\n      if (!punycode) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');\n      }\n      if (punycode.toASCII(v).match(URI.invalid_hostname_characters)) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-:_]');\n      }\n    }\n  };\n\n  URI.ensureValidPort = function (v) {\n    if (!v) {\n      return;\n    }\n\n    var port = Number(v);\n    if (isInteger(port) && (port > 0) && (port < 65536)) {\n      return;\n    }\n\n    throw new TypeError('Port \"' + v + '\" is not a valid port');\n  };\n\n  // noConflict\n  URI.noConflict = function(removeAll) {\n    if (removeAll) {\n      var unconflicted = {\n        URI: this.noConflict()\n      };\n\n      if (root.URITemplate && typeof root.URITemplate.noConflict === 'function') {\n        unconflicted.URITemplate = root.URITemplate.noConflict();\n      }\n\n      if (root.IPv6 && typeof root.IPv6.noConflict === 'function') {\n        unconflicted.IPv6 = root.IPv6.noConflict();\n      }\n\n      if (root.SecondLevelDomains && typeof root.SecondLevelDomains.noConflict === 'function') {\n        unconflicted.SecondLevelDomains = root.SecondLevelDomains.noConflict();\n      }\n\n      return unconflicted;\n    } else if (root.URI === this) {\n      root.URI = _URI;\n    }\n\n    return this;\n  };\n\n  p.build = function(deferBuild) {\n    if (deferBuild === true) {\n      this._deferred_build = true;\n    } else if (deferBuild === undefined || this._deferred_build) {\n      this._string = URI.build(this._parts);\n      this._deferred_build = false;\n    }\n\n    return this;\n  };\n\n  p.clone = function() {\n    return new URI(this);\n  };\n\n  p.valueOf = p.toString = function() {\n    return this.build(false)._string;\n  };\n\n\n  function generateSimpleAccessor(_part){\n    return function(v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        this._parts[_part] = v || null;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  function generatePrefixAccessor(_part, _key){\n    return function(v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        if (v !== null) {\n          v = v + '';\n          if (v.charAt(0) === _key) {\n            v = v.substring(1);\n          }\n        }\n\n        this._parts[_part] = v;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  p.protocol = generateSimpleAccessor('protocol');\n  p.username = generateSimpleAccessor('username');\n  p.password = generateSimpleAccessor('password');\n  p.hostname = generateSimpleAccessor('hostname');\n  p.port = generateSimpleAccessor('port');\n  p.query = generatePrefixAccessor('query', '?');\n  p.fragment = generatePrefixAccessor('fragment', '#');\n\n  p.search = function(v, build) {\n    var t = this.query(v, build);\n    return typeof t === 'string' && t.length ? ('?' + t) : t;\n  };\n  p.hash = function(v, build) {\n    var t = this.fragment(v, build);\n    return typeof t === 'string' && t.length ? ('#' + t) : t;\n  };\n\n  p.pathname = function(v, build) {\n    if (v === undefined || v === true) {\n      var res = this._parts.path || (this._parts.hostname ? '/' : '');\n      return v ? (this._parts.urn ? URI.decodeUrnPath : URI.decodePath)(res) : res;\n    } else {\n      if (this._parts.urn) {\n        this._parts.path = v ? URI.recodeUrnPath(v) : '';\n      } else {\n        this._parts.path = v ? URI.recodePath(v) : '/';\n      }\n      this.build(!build);\n      return this;\n    }\n  };\n  p.path = p.pathname;\n  p.href = function(href, build) {\n    var key;\n\n    if (href === undefined) {\n      return this.toString();\n    }\n\n    this._string = '';\n    this._parts = URI._parts();\n\n    var _URI = href instanceof URI;\n    var _object = typeof href === 'object' && (href.hostname || href.path || href.pathname);\n    if (href.nodeName) {\n      var attribute = URI.getDomAttribute(href);\n      href = href[attribute] || '';\n      _object = false;\n    }\n\n    // window.location is reported to be an object, but it's not the sort\n    // of object we're looking for:\n    // * location.protocol ends with a colon\n    // * location.query != object.search\n    // * location.hash != object.fragment\n    // simply serializing the unknown object should do the trick\n    // (for location, not for everything...)\n    if (!_URI && _object && href.pathname !== undefined) {\n      href = href.toString();\n    }\n\n    if (typeof href === 'string' || href instanceof String) {\n      this._parts = URI.parse(String(href), this._parts);\n    } else if (_URI || _object) {\n      var src = _URI ? href._parts : href;\n      for (key in src) {\n        if (key === 'query') { continue; }\n        if (hasOwn.call(this._parts, key)) {\n          this._parts[key] = src[key];\n        }\n      }\n      if (src.query) {\n        this.query(src.query, false);\n      }\n    } else {\n      throw new TypeError('invalid input');\n    }\n\n    this.build(!build);\n    return this;\n  };\n\n  // identification accessors\n  p.is = function(what) {\n    var ip = false;\n    var ip4 = false;\n    var ip6 = false;\n    var name = false;\n    var sld = false;\n    var idn = false;\n    var punycode = false;\n    var relative = !this._parts.urn;\n\n    if (this._parts.hostname) {\n      relative = false;\n      ip4 = URI.ip4_expression.test(this._parts.hostname);\n      ip6 = URI.ip6_expression.test(this._parts.hostname);\n      ip = ip4 || ip6;\n      name = !ip;\n      sld = name && SLD && SLD.has(this._parts.hostname);\n      idn = name && URI.idn_expression.test(this._parts.hostname);\n      punycode = name && URI.punycode_expression.test(this._parts.hostname);\n    }\n\n    switch (what.toLowerCase()) {\n      case 'relative':\n        return relative;\n\n      case 'absolute':\n        return !relative;\n\n      // hostname identification\n      case 'domain':\n      case 'name':\n        return name;\n\n      case 'sld':\n        return sld;\n\n      case 'ip':\n        return ip;\n\n      case 'ip4':\n      case 'ipv4':\n      case 'inet4':\n        return ip4;\n\n      case 'ip6':\n      case 'ipv6':\n      case 'inet6':\n        return ip6;\n\n      case 'idn':\n        return idn;\n\n      case 'url':\n        return !this._parts.urn;\n\n      case 'urn':\n        return !!this._parts.urn;\n\n      case 'punycode':\n        return punycode;\n    }\n\n    return null;\n  };\n\n  // component specific input validation\n  var _protocol = p.protocol;\n  var _port = p.port;\n  var _hostname = p.hostname;\n\n  p.protocol = function(v, build) {\n    if (v) {\n      // accept trailing ://\n      v = v.replace(/:(\\/\\/)?$/, '');\n\n      if (!v.match(URI.protocol_expression)) {\n        throw new TypeError('Protocol \"' + v + '\" contains characters other than [A-Z0-9.+-] or doesn\\'t start with [A-Z]');\n      }\n    }\n\n    return _protocol.call(this, v, build);\n  };\n  p.scheme = p.protocol;\n  p.port = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      if (v === 0) {\n        v = null;\n      }\n\n      if (v) {\n        v += '';\n        if (v.charAt(0) === ':') {\n          v = v.substring(1);\n        }\n\n        URI.ensureValidPort(v);\n      }\n    }\n    return _port.call(this, v, build);\n  };\n  p.hostname = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      var x = { preventInvalidHostname: this._parts.preventInvalidHostname };\n      var res = URI.parseHost(v, x);\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      v = x.hostname;\n      if (this._parts.preventInvalidHostname) {\n        URI.ensureValidHostname(v, this._parts.protocol);\n      }\n    }\n\n    return _hostname.call(this, v, build);\n  };\n\n  // compound accessors\n  p.origin = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      var protocol = this.protocol();\n      var authority = this.authority();\n      if (!authority) {\n        return '';\n      }\n\n      return (protocol ? protocol + '://' : '') + this.authority();\n    } else {\n      var origin = URI(v);\n      this\n        .protocol(origin.protocol())\n        .authority(origin.authority())\n        .build(!build);\n      return this;\n    }\n  };\n  p.host = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildHost(this._parts) : '';\n    } else {\n      var res = URI.parseHost(v, this._parts);\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.authority = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildAuthority(this._parts) : '';\n    } else {\n      var res = URI.parseAuthority(v, this._parts);\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.userinfo = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      var t = URI.buildUserinfo(this._parts);\n      return t ? t.substring(0, t.length -1) : t;\n    } else {\n      if (v[v.length-1] !== '@') {\n        v += '@';\n      }\n\n      URI.parseUserinfo(v, this._parts);\n      this.build(!build);\n      return this;\n    }\n  };\n  p.resource = function(v, build) {\n    var parts;\n\n    if (v === undefined) {\n      return this.path() + this.search() + this.hash();\n    }\n\n    parts = URI.parse(v);\n    this._parts.path = parts.path;\n    this._parts.query = parts.query;\n    this._parts.fragment = parts.fragment;\n    this.build(!build);\n    return this;\n  };\n\n  // fraction accessors\n  p.subdomain = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    // convenience, return \"www\" from \"www.example.org\"\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      // grab domain and add another segment\n      var end = this._parts.hostname.length - this.domain().length - 1;\n      return this._parts.hostname.substring(0, end) || '';\n    } else {\n      var e = this._parts.hostname.length - this.domain().length;\n      var sub = this._parts.hostname.substring(0, e);\n      var replace = new RegExp('^' + escapeRegEx(sub));\n\n      if (v && v.charAt(v.length - 1) !== '.') {\n        v += '.';\n      }\n\n      if (v.indexOf(':') !== -1) {\n        throw new TypeError('Domains cannot contain colons');\n      }\n\n      if (v) {\n        URI.ensureValidHostname(v, this._parts.protocol);\n      }\n\n      this._parts.hostname = this._parts.hostname.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n  p.domain = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    }\n\n    // convenience, return \"example.org\" from \"www.example.org\"\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      // if hostname consists of 1 or 2 segments, it must be the domain\n      var t = this._parts.hostname.match(/\\./g);\n      if (t && t.length < 2) {\n        return this._parts.hostname;\n      }\n\n      // grab tld and add another segment\n      var end = this._parts.hostname.length - this.tld(build).length - 1;\n      end = this._parts.hostname.lastIndexOf('.', end -1) + 1;\n      return this._parts.hostname.substring(end) || '';\n    } else {\n      if (!v) {\n        throw new TypeError('cannot set domain empty');\n      }\n\n      if (v.indexOf(':') !== -1) {\n        throw new TypeError('Domains cannot contain colons');\n      }\n\n      URI.ensureValidHostname(v, this._parts.protocol);\n\n      if (!this._parts.hostname || this.is('IP')) {\n        this._parts.hostname = v;\n      } else {\n        var replace = new RegExp(escapeRegEx(this.domain()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.tld = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    }\n\n    // return \"org\" from \"www.example.org\"\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      var pos = this._parts.hostname.lastIndexOf('.');\n      var tld = this._parts.hostname.substring(pos + 1);\n\n      if (build !== true && SLD && SLD.list[tld.toLowerCase()]) {\n        return SLD.get(this._parts.hostname) || tld;\n      }\n\n      return tld;\n    } else {\n      var replace;\n\n      if (!v) {\n        throw new TypeError('cannot set TLD empty');\n      } else if (v.match(/[^a-zA-Z0-9-]/)) {\n        if (SLD && SLD.is(v)) {\n          replace = new RegExp(escapeRegEx(this.tld()) + '$');\n          this._parts.hostname = this._parts.hostname.replace(replace, v);\n        } else {\n          throw new TypeError('TLD \"' + v + '\" contains characters other than [A-Z0-9]');\n        }\n      } else if (!this._parts.hostname || this.is('IP')) {\n        throw new ReferenceError('cannot set TLD on non-domain host');\n      } else {\n        replace = new RegExp(escapeRegEx(this.tld()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.directory = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path && !this._parts.hostname) {\n        return '';\n      }\n\n      if (this._parts.path === '/') {\n        return '/';\n      }\n\n      var end = this._parts.path.length - this.filename().length - 1;\n      var res = this._parts.path.substring(0, end) || (this._parts.hostname ? '/' : '');\n\n      return v ? URI.decodePath(res) : res;\n\n    } else {\n      var e = this._parts.path.length - this.filename().length;\n      var directory = this._parts.path.substring(0, e);\n      var replace = new RegExp('^' + escapeRegEx(directory));\n\n      // fully qualifier directories begin with a slash\n      if (!this.is('relative')) {\n        if (!v) {\n          v = '/';\n        }\n\n        if (v.charAt(0) !== '/') {\n          v = '/' + v;\n        }\n      }\n\n      // directories always end with a slash\n      if (v && v.charAt(v.length - 1) !== '/') {\n        v += '/';\n      }\n\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n  p.filename = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v !== 'string') {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var pos = this._parts.path.lastIndexOf('/');\n      var res = this._parts.path.substring(pos+1);\n\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      var mutatedDirectory = false;\n\n      if (v.charAt(0) === '/') {\n        v = v.substring(1);\n      }\n\n      if (v.match(/\\.?\\//)) {\n        mutatedDirectory = true;\n      }\n\n      var replace = new RegExp(escapeRegEx(this.filename()) + '$');\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n\n      if (mutatedDirectory) {\n        this.normalizePath(build);\n      } else {\n        this.build(!build);\n      }\n\n      return this;\n    }\n  };\n  p.suffix = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var filename = this.filename();\n      var pos = filename.lastIndexOf('.');\n      var s, res;\n\n      if (pos === -1) {\n        return '';\n      }\n\n      // suffix may only contain alnum characters (yup, I made this up.)\n      s = filename.substring(pos+1);\n      res = (/^[a-z0-9%]+$/i).test(s) ? s : '';\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      if (v.charAt(0) === '.') {\n        v = v.substring(1);\n      }\n\n      var suffix = this.suffix();\n      var replace;\n\n      if (!suffix) {\n        if (!v) {\n          return this;\n        }\n\n        this._parts.path += '.' + URI.recodePath(v);\n      } else if (!v) {\n        replace = new RegExp(escapeRegEx('.' + suffix) + '$');\n      } else {\n        replace = new RegExp(escapeRegEx(suffix) + '$');\n      }\n\n      if (replace) {\n        v = URI.recodePath(v);\n        this._parts.path = this._parts.path.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.segment = function(segment, v, build) {\n    var separator = this._parts.urn ? ':' : '/';\n    var path = this.path();\n    var absolute = path.substring(0, 1) === '/';\n    var segments = path.split(separator);\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      throw new Error('Bad segment \"' + segment + '\", must be 0-based integer');\n    }\n\n    if (absolute) {\n      segments.shift();\n    }\n\n    if (segment < 0) {\n      // allow negative indexes to address from the end\n      segment = Math.max(segments.length + segment, 0);\n    }\n\n    if (v === undefined) {\n      /*jshint laxbreak: true */\n      return segment === undefined\n        ? segments\n        : segments[segment];\n      /*jshint laxbreak: false */\n    } else if (segment === null || segments[segment] === undefined) {\n      if (isArray(v)) {\n        segments = [];\n        // collapse empty elements within array\n        for (var i=0, l=v.length; i < l; i++) {\n          if (!v[i].length && (!segments.length || !segments[segments.length -1].length)) {\n            continue;\n          }\n\n          if (segments.length && !segments[segments.length -1].length) {\n            segments.pop();\n          }\n\n          segments.push(trimSlashes(v[i]));\n        }\n      } else if (v || typeof v === 'string') {\n        v = trimSlashes(v);\n        if (segments[segments.length -1] === '') {\n          // empty trailing elements have to be overwritten\n          // to prevent results such as /foo//bar\n          segments[segments.length -1] = v;\n        } else {\n          segments.push(v);\n        }\n      }\n    } else {\n      if (v) {\n        segments[segment] = trimSlashes(v);\n      } else {\n        segments.splice(segment, 1);\n      }\n    }\n\n    if (absolute) {\n      segments.unshift('');\n    }\n\n    return this.path(segments.join(separator), build);\n  };\n  p.segmentCoded = function(segment, v, build) {\n    var segments, i, l;\n\n    if (typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (v === undefined) {\n      segments = this.segment(segment, v, build);\n      if (!isArray(segments)) {\n        segments = segments !== undefined ? URI.decode(segments) : undefined;\n      } else {\n        for (i = 0, l = segments.length; i < l; i++) {\n          segments[i] = URI.decode(segments[i]);\n        }\n      }\n\n      return segments;\n    }\n\n    if (!isArray(v)) {\n      v = (typeof v === 'string' || v instanceof String) ? URI.encode(v) : v;\n    } else {\n      for (i = 0, l = v.length; i < l; i++) {\n        v[i] = URI.encode(v[i]);\n      }\n    }\n\n    return this.segment(segment, v, build);\n  };\n\n  // mutating query string\n  var q = p.query;\n  p.query = function(v, build) {\n    if (v === true) {\n      return URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    } else if (typeof v === 'function') {\n      var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n      var result = v.call(this, data);\n      this._parts.query = URI.buildQuery(result || data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else if (v !== undefined && typeof v !== 'string') {\n      this._parts.query = URI.buildQuery(v, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else {\n      return q.call(this, v, build);\n    }\n  };\n  p.setQuery = function(name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n\n    if (typeof name === 'string' || name instanceof String) {\n      data[name] = value !== undefined ? value : null;\n    } else if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          data[key] = name[key];\n        }\n      }\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n  p.addQuery = function(name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.addQuery(data, name, value === undefined ? null : value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n  p.removeQuery = function(name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.removeQuery(data, name, value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n  p.hasQuery = function(name, value, withinArray) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    return URI.hasQuery(data, name, value, withinArray);\n  };\n  p.setSearch = p.setQuery;\n  p.addSearch = p.addQuery;\n  p.removeSearch = p.removeQuery;\n  p.hasSearch = p.hasQuery;\n\n  // sanitizing URLs\n  p.normalize = function() {\n    if (this._parts.urn) {\n      return this\n        .normalizeProtocol(false)\n        .normalizePath(false)\n        .normalizeQuery(false)\n        .normalizeFragment(false)\n        .build();\n    }\n\n    return this\n      .normalizeProtocol(false)\n      .normalizeHostname(false)\n      .normalizePort(false)\n      .normalizePath(false)\n      .normalizeQuery(false)\n      .normalizeFragment(false)\n      .build();\n  };\n  p.normalizeProtocol = function(build) {\n    if (typeof this._parts.protocol === 'string') {\n      this._parts.protocol = this._parts.protocol.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizeHostname = function(build) {\n    if (this._parts.hostname) {\n      if (this.is('IDN') && punycode) {\n        this._parts.hostname = punycode.toASCII(this._parts.hostname);\n      } else if (this.is('IPv6') && IPv6) {\n        this._parts.hostname = IPv6.best(this._parts.hostname);\n      }\n\n      this._parts.hostname = this._parts.hostname.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizePort = function(build) {\n    // remove port of it's the protocol's default\n    if (typeof this._parts.protocol === 'string' && this._parts.port === URI.defaultPorts[this._parts.protocol]) {\n      this._parts.port = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizePath = function(build) {\n    var _path = this._parts.path;\n    if (!_path) {\n      return this;\n    }\n\n    if (this._parts.urn) {\n      this._parts.path = URI.recodeUrnPath(this._parts.path);\n      this.build(!build);\n      return this;\n    }\n\n    if (this._parts.path === '/') {\n      return this;\n    }\n\n    _path = URI.recodePath(_path);\n\n    var _was_relative;\n    var _leadingParents = '';\n    var _parent, _pos;\n\n    // handle relative paths\n    if (_path.charAt(0) !== '/') {\n      _was_relative = true;\n      _path = '/' + _path;\n    }\n\n    // handle relative files (as opposed to directories)\n    if (_path.slice(-3) === '/..' || _path.slice(-2) === '/.') {\n      _path += '/';\n    }\n\n    // resolve simples\n    _path = _path\n      .replace(/(\\/(\\.\\/)+)|(\\/\\.$)/g, '/')\n      .replace(/\\/{2,}/g, '/');\n\n    // remember leading parents\n    if (_was_relative) {\n      _leadingParents = _path.substring(1).match(/^(\\.\\.\\/)+/) || '';\n      if (_leadingParents) {\n        _leadingParents = _leadingParents[0];\n      }\n    }\n\n    // resolve parents\n    while (true) {\n      _parent = _path.search(/\\/\\.\\.(\\/|$)/);\n      if (_parent === -1) {\n        // no more ../ to resolve\n        break;\n      } else if (_parent === 0) {\n        // top level cannot be relative, skip it\n        _path = _path.substring(3);\n        continue;\n      }\n\n      _pos = _path.substring(0, _parent).lastIndexOf('/');\n      if (_pos === -1) {\n        _pos = _parent;\n      }\n      _path = _path.substring(0, _pos) + _path.substring(_parent + 3);\n    }\n\n    // revert to relative\n    if (_was_relative && this.is('relative')) {\n      _path = _leadingParents + _path.substring(1);\n    }\n\n    this._parts.path = _path;\n    this.build(!build);\n    return this;\n  };\n  p.normalizePathname = p.normalizePath;\n  p.normalizeQuery = function(build) {\n    if (typeof this._parts.query === 'string') {\n      if (!this._parts.query.length) {\n        this._parts.query = null;\n      } else {\n        this.query(URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace));\n      }\n\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizeFragment = function(build) {\n    if (!this._parts.fragment) {\n      this._parts.fragment = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizeSearch = p.normalizeQuery;\n  p.normalizeHash = p.normalizeFragment;\n\n  p.iso8859 = function() {\n    // expect unicode input, iso8859 output\n    var e = URI.encode;\n    var d = URI.decode;\n\n    URI.encode = escape;\n    URI.decode = decodeURIComponent;\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n    return this;\n  };\n\n  p.unicode = function() {\n    // expect iso8859 input, unicode output\n    var e = URI.encode;\n    var d = URI.decode;\n\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = unescape;\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n    return this;\n  };\n\n  p.readable = function() {\n    var uri = this.clone();\n    // removing username, password, because they shouldn't be displayed according to RFC 3986\n    uri.username('').password('').normalize();\n    var t = '';\n    if (uri._parts.protocol) {\n      t += uri._parts.protocol + '://';\n    }\n\n    if (uri._parts.hostname) {\n      if (uri.is('punycode') && punycode) {\n        t += punycode.toUnicode(uri._parts.hostname);\n        if (uri._parts.port) {\n          t += ':' + uri._parts.port;\n        }\n      } else {\n        t += uri.host();\n      }\n    }\n\n    if (uri._parts.hostname && uri._parts.path && uri._parts.path.charAt(0) !== '/') {\n      t += '/';\n    }\n\n    t += uri.path(true);\n    if (uri._parts.query) {\n      var q = '';\n      for (var i = 0, qp = uri._parts.query.split('&'), l = qp.length; i < l; i++) {\n        var kv = (qp[i] || '').split('=');\n        q += '&' + URI.decodeQuery(kv[0], this._parts.escapeQuerySpace)\n          .replace(/&/g, '%26');\n\n        if (kv[1] !== undefined) {\n          q += '=' + URI.decodeQuery(kv[1], this._parts.escapeQuerySpace)\n            .replace(/&/g, '%26');\n        }\n      }\n      t += '?' + q.substring(1);\n    }\n\n    t += URI.decodeQuery(uri.hash(), true);\n    return t;\n  };\n\n  // resolving relative and absolute URLs\n  p.absoluteTo = function(base) {\n    var resolved = this.clone();\n    var properties = ['protocol', 'username', 'password', 'hostname', 'port'];\n    var basedir, i, p;\n\n    if (this._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    if (!(base instanceof URI)) {\n      base = new URI(base);\n    }\n\n    if (resolved._parts.protocol) {\n      // Directly returns even if this._parts.hostname is empty.\n      return resolved;\n    } else {\n      resolved._parts.protocol = base._parts.protocol;\n    }\n\n    if (this._parts.hostname) {\n      return resolved;\n    }\n\n    for (i = 0; (p = properties[i]); i++) {\n      resolved._parts[p] = base._parts[p];\n    }\n\n    if (!resolved._parts.path) {\n      resolved._parts.path = base._parts.path;\n      if (!resolved._parts.query) {\n        resolved._parts.query = base._parts.query;\n      }\n    } else {\n      if (resolved._parts.path.substring(-2) === '..') {\n        resolved._parts.path += '/';\n      }\n\n      if (resolved.path().charAt(0) !== '/') {\n        basedir = base.directory();\n        basedir = basedir ? basedir : base.path().indexOf('/') === 0 ? '/' : '';\n        resolved._parts.path = (basedir ? (basedir + '/') : '') + resolved._parts.path;\n        resolved.normalizePath();\n      }\n    }\n\n    resolved.build();\n    return resolved;\n  };\n  p.relativeTo = function(base) {\n    var relative = this.clone().normalize();\n    var relativeParts, baseParts, common, relativePath, basePath;\n\n    if (relative._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    base = new URI(base).normalize();\n    relativeParts = relative._parts;\n    baseParts = base._parts;\n    relativePath = relative.path();\n    basePath = base.path();\n\n    if (relativePath.charAt(0) !== '/') {\n      throw new Error('URI is already relative');\n    }\n\n    if (basePath.charAt(0) !== '/') {\n      throw new Error('Cannot calculate a URI relative to another relative URI');\n    }\n\n    if (relativeParts.protocol === baseParts.protocol) {\n      relativeParts.protocol = null;\n    }\n\n    if (relativeParts.username !== baseParts.username || relativeParts.password !== baseParts.password) {\n      return relative.build();\n    }\n\n    if (relativeParts.protocol !== null || relativeParts.username !== null || relativeParts.password !== null) {\n      return relative.build();\n    }\n\n    if (relativeParts.hostname === baseParts.hostname && relativeParts.port === baseParts.port) {\n      relativeParts.hostname = null;\n      relativeParts.port = null;\n    } else {\n      return relative.build();\n    }\n\n    if (relativePath === basePath) {\n      relativeParts.path = '';\n      return relative.build();\n    }\n\n    // determine common sub path\n    common = URI.commonPath(relativePath, basePath);\n\n    // If the paths have nothing in common, return a relative URL with the absolute path.\n    if (!common) {\n      return relative.build();\n    }\n\n    var parents = baseParts.path\n      .substring(common.length)\n      .replace(/[^\\/]*$/, '')\n      .replace(/.*?\\//g, '../');\n\n    relativeParts.path = (parents + relativeParts.path.substring(common.length)) || './';\n\n    return relative.build();\n  };\n\n  // comparing URIs\n  p.equals = function(uri) {\n    var one = this.clone();\n    var two = new URI(uri);\n    var one_map = {};\n    var two_map = {};\n    var checked = {};\n    var one_query, two_query, key;\n\n    one.normalize();\n    two.normalize();\n\n    // exact match\n    if (one.toString() === two.toString()) {\n      return true;\n    }\n\n    // extract query string\n    one_query = one.query();\n    two_query = two.query();\n    one.query('');\n    two.query('');\n\n    // definitely not equal if not even non-query parts match\n    if (one.toString() !== two.toString()) {\n      return false;\n    }\n\n    // query parameters have the same length, even if they're permuted\n    if (one_query.length !== two_query.length) {\n      return false;\n    }\n\n    one_map = URI.parseQuery(one_query, this._parts.escapeQuerySpace);\n    two_map = URI.parseQuery(two_query, this._parts.escapeQuerySpace);\n\n    for (key in one_map) {\n      if (hasOwn.call(one_map, key)) {\n        if (!isArray(one_map[key])) {\n          if (one_map[key] !== two_map[key]) {\n            return false;\n          }\n        } else if (!arraysEqual(one_map[key], two_map[key])) {\n          return false;\n        }\n\n        checked[key] = true;\n      }\n    }\n\n    for (key in two_map) {\n      if (hasOwn.call(two_map, key)) {\n        if (!checked[key]) {\n          // two contains a parameter not present in one\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  // state\n  p.preventInvalidHostname = function(v) {\n    this._parts.preventInvalidHostname = !!v;\n    return this;\n  };\n\n  p.duplicateQueryParameters = function(v) {\n    this._parts.duplicateQueryParameters = !!v;\n    return this;\n  };\n\n  p.escapeQuerySpace = function(v) {\n    this._parts.escapeQuerySpace = !!v;\n    return this;\n  };\n\n  return URI;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}