{"ast":null,"code":"export function toHex(n) {\n  return \"0x\" + n.toString(16);\n}\nexport function fromHex(hexString) {\n  return Number.parseInt(hexString, 16);\n}\nexport function formatBlock(block) {\n  if (typeof block === \"string\") {\n    return block;\n  } else if (typeof block === \"number\" && Number.isInteger(block)) {\n    return toHex(block);\n  }\n\n  return block.toString();\n}","map":{"version":3,"sources":["../../../src/util/hex.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,KAAV,CAAgB,CAAhB,EAAyB;EAC7B,OAAO,OAAK,CAAC,CAAC,QAAF,CAAW,EAAX,CAAZ;AACD;AAED,OAAM,SAAU,OAAV,CAAkB,SAAlB,EAAmC;EACvC,OAAO,MAAM,CAAC,QAAP,CAAgB,SAAhB,EAA2B,EAA3B,CAAP;AACD;AAED,OAAM,SAAU,WAAV,CAAsB,KAAtB,EAA4C;EAChD,IAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAO,KAAP;EACD,CAFD,MAEO,IAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,MAAM,CAAC,SAAP,CAAiB,KAAjB,CAAjC,EAA0D;IAC/D,OAAO,KAAK,CAAC,KAAD,CAAZ;EACD;;EACD,OAAO,KAAK,CAAC,QAAN,EAAP;AACD","sourcesContent":["export function toHex(n: number): string {\n  return `0x${n.toString(16)}`;\n}\n\nexport function fromHex(hexString: string): number {\n  return Number.parseInt(hexString, 16);\n}\n\nexport function formatBlock(block: string | number): string {\n  if (typeof block === \"string\") {\n    return block;\n  } else if (typeof block === \"number\" && Number.isInteger(block)) {\n    return toHex(block);\n  }\n  return block.toString();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}